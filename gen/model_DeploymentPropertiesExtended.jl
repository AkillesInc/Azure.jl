# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.

mutable struct DeploymentPropertiesExtended <: SwaggerModel
    provisioningState::Union{ Nothing, String } # provisioningState
    correlationId::Union{ Nothing, String } # correlationId
    timestamp::Union{ Nothing, String } # timestamp
    outputs::Union{ Nothing, Any } # outputs
    providers::Union{ Nothing, Vector{Provider} } # providers
    dependencies::Union{ Nothing, Vector{Dependency} } # dependencies
    template::Union{ Nothing, Any } # template
    templateLink::Union{ Nothing, TemplateLink } # templateLink
    parameters::Union{ Nothing, Any } # parameters
    parametersLink::Union{ Nothing, ParametersLink } # parametersLink
    mode::Union{ Nothing, String } # mode
    debugSetting::Union{ Nothing, DebugSetting } # debugSetting

    function DeploymentPropertiesExtended(;provisioningState=nothing, correlationId=nothing, timestamp=nothing, outputs=nothing, providers=nothing, dependencies=nothing, template=nothing, templateLink=nothing, parameters=nothing, parametersLink=nothing, mode=nothing, debugSetting=nothing)
        o = new()
        set_field!(o, :provisioningState, provisioningState)
        set_field!(o, :correlationId, correlationId)
        set_field!(o, :timestamp, timestamp)
        set_field!(o, :outputs, outputs)
        set_field!(o, :providers, providers)
        set_field!(o, :dependencies, dependencies)
        set_field!(o, :template, template)
        set_field!(o, :templateLink, templateLink)
        set_field!(o, :parameters, parameters)
        set_field!(o, :parametersLink, parametersLink)
        set_field!(o, :mode, mode)
        set_field!(o, :debugSetting, debugSetting)
        o
    end
end # type DeploymentPropertiesExtended

const _name_map_DeploymentPropertiesExtended = Dict{String,Symbol}(["provisioningState"=>:provisioningState, "correlationId"=>:correlationId, "timestamp"=>:timestamp, "outputs"=>:outputs, "providers"=>:providers, "dependencies"=>:dependencies, "template"=>:template, "templateLink"=>:templateLink, "parameters"=>:parameters, "parametersLink"=>:parametersLink, "mode"=>:mode, "debugSetting"=>:debugSetting])
const _field_map_DeploymentPropertiesExtended = Dict{Symbol,String}([:provisioningState=>"provisioningState", :correlationId=>"correlationId", :timestamp=>"timestamp", :outputs=>"outputs", :providers=>"providers", :dependencies=>"dependencies", :template=>"template", :templateLink=>"templateLink", :parameters=>"parameters", :parametersLink=>"parametersLink", :mode=>"mode", :debugSetting=>"debugSetting"])
Swagger.name_map(::Type{ DeploymentPropertiesExtended }) = _name_map_DeploymentPropertiesExtended
Swagger.field_map(::Type{ DeploymentPropertiesExtended }) = _field_map_DeploymentPropertiesExtended

const _allowed_DeploymentPropertiesExtended_mode = ["Incremental", "Complete"]

function check_required(o::DeploymentPropertiesExtended)
    true
end

function validate_field(o::DeploymentPropertiesExtended, name::Symbol, val)
    if name === :mode
        Swagger.validate_param(name, "DeploymentPropertiesExtended", :enum, val, _allowed_DeploymentPropertiesExtended_mode)
    end
end
