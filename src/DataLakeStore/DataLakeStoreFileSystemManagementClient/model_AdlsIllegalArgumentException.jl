# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.

mutable struct AdlsIllegalArgumentException <: SwaggerModel
    exception::Union{ Nothing, String } # exception
    javaClassName::Union{ Nothing, String } # javaClassName
    message::Union{ Nothing, String } # message

    function AdlsIllegalArgumentException(;exception=nothing, javaClassName=nothing, message=nothing)
        o = new()
        set_field!(o, :exception, exception)
        set_field!(o, :javaClassName, javaClassName)
        set_field!(o, :message, message)
        o
    end
end # type AdlsIllegalArgumentException

const _name_map_AdlsIllegalArgumentException = Dict{String,Symbol}(["exception"=>:exception, "javaClassName"=>:javaClassName, "message"=>:message])
const _field_map_AdlsIllegalArgumentException = Dict{Symbol,String}([:exception=>"exception", :javaClassName=>"javaClassName", :message=>"message"])
Swagger.name_map(::Type{ AdlsIllegalArgumentException }) = _name_map_AdlsIllegalArgumentException
Swagger.field_map(::Type{ AdlsIllegalArgumentException }) = _field_map_AdlsIllegalArgumentException

function check_required(o::AdlsIllegalArgumentException)
    (o.exception === nothing) && (return false)
    true
end

function validate_field(o::AdlsIllegalArgumentException, name::Symbol, val)
end
