# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct FileStatusResult <: SwaggerModel
    fileStatus::Any # spec type: Union{ Nothing, FileStatusProperties } # spec name: fileStatus

    function FileStatusResult(;fileStatus=nothing)
        o = new()
        validate_property(FileStatusResult, Symbol("fileStatus"), fileStatus)
        setfield!(o, Symbol("fileStatus"), fileStatus)
        o
    end
end # type FileStatusResult

const _property_map_FileStatusResult = Dict{Symbol,Symbol}(Symbol("fileStatus")=>Symbol("fileStatus"))
const _property_types_FileStatusResult = Dict{Symbol,String}(Symbol("fileStatus")=>"FileStatusProperties")
Base.propertynames(::Type{ FileStatusResult }) = collect(keys(_property_map_FileStatusResult))
Swagger.property_type(::Type{ FileStatusResult }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_FileStatusResult[name]))}
Swagger.field_name(::Type{ FileStatusResult }, property_name::Symbol) =  _property_map_FileStatusResult[property_name]

function check_required(o::FileStatusResult)
    true
end

function validate_property(::Type{ FileStatusResult }, name::Symbol, val)
end
