# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct CreateOrUpdateFirewallRuleParameters <: SwaggerModel
    properties::Any # spec type: Union{ Nothing, CreateOrUpdateFirewallRuleProperties } # spec name: properties

    function CreateOrUpdateFirewallRuleParameters(;properties=nothing)
        o = new()
        validate_property(CreateOrUpdateFirewallRuleParameters, Symbol("properties"), properties)
        setfield!(o, Symbol("properties"), properties)
        o
    end
end # type CreateOrUpdateFirewallRuleParameters

const _property_map_CreateOrUpdateFirewallRuleParameters = Dict{Symbol,Symbol}(Symbol("properties")=>Symbol("properties"))
const _property_types_CreateOrUpdateFirewallRuleParameters = Dict{Symbol,String}(Symbol("properties")=>"CreateOrUpdateFirewallRuleProperties")
Base.propertynames(::Type{ CreateOrUpdateFirewallRuleParameters }) = collect(keys(_property_map_CreateOrUpdateFirewallRuleParameters))
Swagger.property_type(::Type{ CreateOrUpdateFirewallRuleParameters }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_CreateOrUpdateFirewallRuleParameters[name]))}
Swagger.field_name(::Type{ CreateOrUpdateFirewallRuleParameters }, property_name::Symbol) =  _property_map_CreateOrUpdateFirewallRuleParameters[property_name]

function check_required(o::CreateOrUpdateFirewallRuleParameters)
    (getproperty(o, Symbol("properties")) === nothing) && (return false)
    true
end

function validate_property(::Type{ CreateOrUpdateFirewallRuleParameters }, name::Symbol, val)
end
