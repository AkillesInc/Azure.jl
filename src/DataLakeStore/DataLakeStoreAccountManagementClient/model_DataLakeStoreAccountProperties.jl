# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.

type DataLakeStoreAccountProperties <: SwaggerModel
    provisioningState::Nullable{ String } # provisioningState
    state::Nullable{ String } # state
    creationTime::Nullable{ DateTime } # creationTime
    lastModifiedTime::Nullable{ DateTime } # lastModifiedTime
    endpoint::Nullable{ String } # endpoint
    accountId::Nullable{ String } # accountId

    function DataLakeStoreAccountProperties(;provisioningState=nothing, state=nothing, creationTime=nothing, lastModifiedTime=nothing, endpoint=nothing, accountId=nothing)
        o = new()
        set_field!(o, :provisioningState, provisioningState)
        set_field!(o, :state, state)
        set_field!(o, :creationTime, creationTime)
        set_field!(o, :lastModifiedTime, lastModifiedTime)
        set_field!(o, :endpoint, endpoint)
        set_field!(o, :accountId, accountId)
        o
    end
end # type DataLakeStoreAccountProperties

const _name_map_DataLakeStoreAccountProperties = Dict{String,Symbol}(["provisioningState"=>:provisioningState, "state"=>:state, "creationTime"=>:creationTime, "lastModifiedTime"=>:lastModifiedTime, "endpoint"=>:endpoint, "accountId"=>:accountId])
const _field_map_DataLakeStoreAccountProperties = Dict{Symbol,String}([:provisioningState=>"provisioningState", :state=>"state", :creationTime=>"creationTime", :lastModifiedTime=>"lastModifiedTime", :endpoint=>"endpoint", :accountId=>"accountId"])
Swagger.name_map(::Type{ DataLakeStoreAccountProperties }) = _name_map_DataLakeStoreAccountProperties
Swagger.field_map(::Type{ DataLakeStoreAccountProperties }) = _field_map_DataLakeStoreAccountProperties

const _allowed_DataLakeStoreAccountProperties_provisioningState = ["Failed", "Creating", "Running", "Succeeded", "Patching", "Suspending", "Resuming", "Deleting", "Deleted", "Undeleting", "Canceled"]

const _allowed_DataLakeStoreAccountProperties_state = ["Active", "Suspended"]

function check_required(o::DataLakeStoreAccountProperties)
    true
end

function validate_field(o::DataLakeStoreAccountProperties, name::Symbol, val)
    if name === :provisioningState
        Swagger.validate_param(name, "DataLakeStoreAccountProperties", :enum, val, _allowed_DataLakeStoreAccountProperties_provisioningState)
    end
    if name === :state
        Swagger.validate_param(name, "DataLakeStoreAccountProperties", :enum, val, _allowed_DataLakeStoreAccountProperties_state)
    end
end
