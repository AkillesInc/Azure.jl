# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.

type KeyVaultMetaInfo <: SwaggerModel
    keyVaultResourceId::Nullable{ String } # keyVaultResourceId
    encryptionKeyName::Nullable{ String } # encryptionKeyName
    encryptionKeyVersion::Nullable{ String } # encryptionKeyVersion

    function KeyVaultMetaInfo(;keyVaultResourceId=nothing, encryptionKeyName=nothing, encryptionKeyVersion=nothing)
        o = new()
        set_field!(o, :keyVaultResourceId, keyVaultResourceId)
        set_field!(o, :encryptionKeyName, encryptionKeyName)
        set_field!(o, :encryptionKeyVersion, encryptionKeyVersion)
        o
    end
end # type KeyVaultMetaInfo

const _name_map_KeyVaultMetaInfo = Dict{String,Symbol}(["keyVaultResourceId"=>:keyVaultResourceId, "encryptionKeyName"=>:encryptionKeyName, "encryptionKeyVersion"=>:encryptionKeyVersion])
const _field_map_KeyVaultMetaInfo = Dict{Symbol,String}([:keyVaultResourceId=>"keyVaultResourceId", :encryptionKeyName=>"encryptionKeyName", :encryptionKeyVersion=>"encryptionKeyVersion"])
Swagger.name_map(::Type{ KeyVaultMetaInfo }) = _name_map_KeyVaultMetaInfo
Swagger.field_map(::Type{ KeyVaultMetaInfo }) = _field_map_KeyVaultMetaInfo

function check_required(o::KeyVaultMetaInfo)
    isnull(o.keyVaultResourceId) && (return false)
    isnull(o.encryptionKeyName) && (return false)
    isnull(o.encryptionKeyVersion) && (return false)
    true
end

function validate_field(o::KeyVaultMetaInfo, name::Symbol, val)
end
