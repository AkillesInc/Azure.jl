# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct CreateOrUpdateFirewallRuleProperties <: SwaggerModel
    startIpAddress::Any # spec type: Union{ Nothing, String } # spec name: startIpAddress
    endIpAddress::Any # spec type: Union{ Nothing, String } # spec name: endIpAddress

    function CreateOrUpdateFirewallRuleProperties(;startIpAddress=nothing, endIpAddress=nothing)
        o = new()
        validate_property(CreateOrUpdateFirewallRuleProperties, Symbol("startIpAddress"), startIpAddress)
        setfield!(o, Symbol("startIpAddress"), startIpAddress)
        validate_property(CreateOrUpdateFirewallRuleProperties, Symbol("endIpAddress"), endIpAddress)
        setfield!(o, Symbol("endIpAddress"), endIpAddress)
        o
    end
end # type CreateOrUpdateFirewallRuleProperties

const _property_map_CreateOrUpdateFirewallRuleProperties = Dict{Symbol,Symbol}(Symbol("startIpAddress")=>Symbol("startIpAddress"), Symbol("endIpAddress")=>Symbol("endIpAddress"))
const _property_types_CreateOrUpdateFirewallRuleProperties = Dict{Symbol,String}(Symbol("startIpAddress")=>"String", Symbol("endIpAddress")=>"String")
Base.propertynames(::Type{ CreateOrUpdateFirewallRuleProperties }) = collect(keys(_property_map_CreateOrUpdateFirewallRuleProperties))
Swagger.property_type(::Type{ CreateOrUpdateFirewallRuleProperties }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_CreateOrUpdateFirewallRuleProperties[name]))}
Swagger.field_name(::Type{ CreateOrUpdateFirewallRuleProperties }, property_name::Symbol) =  _property_map_CreateOrUpdateFirewallRuleProperties[property_name]

function check_required(o::CreateOrUpdateFirewallRuleProperties)
    (getproperty(o, Symbol("startIpAddress")) === nothing) && (return false)
    (getproperty(o, Symbol("endIpAddress")) === nothing) && (return false)
    true
end

function validate_property(::Type{ CreateOrUpdateFirewallRuleProperties }, name::Symbol, val)
end
