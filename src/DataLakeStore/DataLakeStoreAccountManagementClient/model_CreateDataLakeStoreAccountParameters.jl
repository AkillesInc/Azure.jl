# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct CreateDataLakeStoreAccountParameters <: SwaggerModel
    location::Any # spec type: Union{ Nothing, String } # spec name: location
    tags::Any # spec type: Union{ Nothing, Dict{String, String} } # spec name: tags
    identity::Any # spec type: Union{ Nothing, EncryptionIdentity } # spec name: identity
    properties::Any # spec type: Union{ Nothing, CreateDataLakeStoreAccountProperties } # spec name: properties

    function CreateDataLakeStoreAccountParameters(;location=nothing, tags=nothing, identity=nothing, properties=nothing)
        o = new()
        validate_property(CreateDataLakeStoreAccountParameters, Symbol("location"), location)
        setfield!(o, Symbol("location"), location)
        validate_property(CreateDataLakeStoreAccountParameters, Symbol("tags"), tags)
        setfield!(o, Symbol("tags"), tags)
        validate_property(CreateDataLakeStoreAccountParameters, Symbol("identity"), identity)
        setfield!(o, Symbol("identity"), identity)
        validate_property(CreateDataLakeStoreAccountParameters, Symbol("properties"), properties)
        setfield!(o, Symbol("properties"), properties)
        o
    end
end # type CreateDataLakeStoreAccountParameters

const _property_map_CreateDataLakeStoreAccountParameters = Dict{Symbol,Symbol}(Symbol("location")=>Symbol("location"), Symbol("tags")=>Symbol("tags"), Symbol("identity")=>Symbol("identity"), Symbol("properties")=>Symbol("properties"))
const _property_types_CreateDataLakeStoreAccountParameters = Dict{Symbol,String}(Symbol("location")=>"String", Symbol("tags")=>"Dict{String, String}", Symbol("identity")=>"EncryptionIdentity", Symbol("properties")=>"CreateDataLakeStoreAccountProperties")
Base.propertynames(::Type{ CreateDataLakeStoreAccountParameters }) = collect(keys(_property_map_CreateDataLakeStoreAccountParameters))
Swagger.property_type(::Type{ CreateDataLakeStoreAccountParameters }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_CreateDataLakeStoreAccountParameters[name]))}
Swagger.field_name(::Type{ CreateDataLakeStoreAccountParameters }, property_name::Symbol) =  _property_map_CreateDataLakeStoreAccountParameters[property_name]

function check_required(o::CreateDataLakeStoreAccountParameters)
    (getproperty(o, Symbol("location")) === nothing) && (return false)
    true
end

function validate_property(::Type{ CreateDataLakeStoreAccountParameters }, name::Symbol, val)
end
