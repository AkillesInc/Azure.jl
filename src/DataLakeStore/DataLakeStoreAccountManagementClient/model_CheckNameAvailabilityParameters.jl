# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.

type CheckNameAvailabilityParameters <: SwaggerModel
    name::Nullable{ String } # name
    _type::Nullable{ String } # type

    function CheckNameAvailabilityParameters(;name=nothing, _type=nothing)
        o = new()
        set_field!(o, :name, name)
        set_field!(o, :_type, _type)
        o
    end
end # type CheckNameAvailabilityParameters

const _name_map_CheckNameAvailabilityParameters = Dict{String,Symbol}(["name"=>:name, "type"=>:_type])
const _field_map_CheckNameAvailabilityParameters = Dict{Symbol,String}([:name=>"name", :_type=>"type"])
Swagger.name_map(::Type{ CheckNameAvailabilityParameters }) = _name_map_CheckNameAvailabilityParameters
Swagger.field_map(::Type{ CheckNameAvailabilityParameters }) = _field_map_CheckNameAvailabilityParameters

const _allowed_CheckNameAvailabilityParameters__type = ["Microsoft.DataLakeStore/accounts"]

function check_required(o::CheckNameAvailabilityParameters)
    isnull(o.name) && (return false)
    true
end

function validate_field(o::CheckNameAvailabilityParameters, name::Symbol, val)
    if name === :_type
        Swagger.validate_param(name, "CheckNameAvailabilityParameters", :enum, val, _allowed_CheckNameAvailabilityParameters__type)
    end
end
