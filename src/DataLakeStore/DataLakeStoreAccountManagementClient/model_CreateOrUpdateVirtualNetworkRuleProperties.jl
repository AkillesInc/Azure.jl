# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct CreateOrUpdateVirtualNetworkRuleProperties <: SwaggerModel
    subnetId::Any # spec type: Union{ Nothing, String } # spec name: subnetId

    function CreateOrUpdateVirtualNetworkRuleProperties(;subnetId=nothing)
        o = new()
        validate_property(CreateOrUpdateVirtualNetworkRuleProperties, Symbol("subnetId"), subnetId)
        setfield!(o, Symbol("subnetId"), subnetId)
        o
    end
end # type CreateOrUpdateVirtualNetworkRuleProperties

const _property_map_CreateOrUpdateVirtualNetworkRuleProperties = Dict{Symbol,Symbol}(Symbol("subnetId")=>Symbol("subnetId"))
const _property_types_CreateOrUpdateVirtualNetworkRuleProperties = Dict{Symbol,String}(Symbol("subnetId")=>"String")
Base.propertynames(::Type{ CreateOrUpdateVirtualNetworkRuleProperties }) = collect(keys(_property_map_CreateOrUpdateVirtualNetworkRuleProperties))
Swagger.property_type(::Type{ CreateOrUpdateVirtualNetworkRuleProperties }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_CreateOrUpdateVirtualNetworkRuleProperties[name]))}
Swagger.field_name(::Type{ CreateOrUpdateVirtualNetworkRuleProperties }, property_name::Symbol) =  _property_map_CreateOrUpdateVirtualNetworkRuleProperties[property_name]

function check_required(o::CreateOrUpdateVirtualNetworkRuleProperties)
    (getproperty(o, Symbol("subnetId")) === nothing) && (return false)
    true
end

function validate_property(::Type{ CreateOrUpdateVirtualNetworkRuleProperties }, name::Symbol, val)
end
