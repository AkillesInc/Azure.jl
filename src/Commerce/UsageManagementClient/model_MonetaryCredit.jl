# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.

mutable struct MonetaryCredit <: SwaggerModel
    Name::Union{ Nothing, String } # Name
    EffectiveDate::Union{ Nothing, DateTime } # EffectiveDate

    function MonetaryCredit(;Name=nothing, EffectiveDate=nothing)
        o = new()
        set_field!(o, :Name, Name)
        set_field!(o, :EffectiveDate, EffectiveDate)
        o
    end
end # type MonetaryCredit

const _name_map_MonetaryCredit = Dict{String,Symbol}(["Name"=>:Name, "EffectiveDate"=>:EffectiveDate])
const _field_map_MonetaryCredit = Dict{Symbol,String}([:Name=>"Name", :EffectiveDate=>"EffectiveDate"])
Swagger.name_map(::Type{ MonetaryCredit }) = _name_map_MonetaryCredit
Swagger.field_map(::Type{ MonetaryCredit }) = _field_map_MonetaryCredit

const _allowed_MonetaryCredit_Name = ["Recurring Charge", "Monetary Commitment", "Monetary Credit"]

function check_required(o::MonetaryCredit)
    true
end

function validate_field(o::MonetaryCredit, name::Symbol, val)
    if name === :Name
        Swagger.validate_param(name, "MonetaryCredit", :enum, val, _allowed_MonetaryCredit_Name)
    end
end
