# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.

mutable struct StorageAccountKey <: SwaggerModel
    keyName::Union{ Nothing, String } # keyName
    value::Union{ Nothing, String } # value
    permissions::Union{ Nothing, String } # permissions

    function StorageAccountKey(;keyName=nothing, value=nothing, permissions=nothing)
        o = new()
        set_field!(o, :keyName, keyName)
        set_field!(o, :value, value)
        set_field!(o, :permissions, permissions)
        o
    end
end # type StorageAccountKey

const _name_map_StorageAccountKey = Dict{String,Symbol}(["keyName"=>:keyName, "value"=>:value, "permissions"=>:permissions])
const _field_map_StorageAccountKey = Dict{Symbol,String}([:keyName=>"keyName", :value=>"value", :permissions=>"permissions"])
Swagger.name_map(::Type{ StorageAccountKey }) = _name_map_StorageAccountKey
Swagger.field_map(::Type{ StorageAccountKey }) = _field_map_StorageAccountKey

const _allowed_StorageAccountKey_permissions = ["Read", "Full"]

function check_required(o::StorageAccountKey)
    true
end

function validate_field(o::StorageAccountKey, name::Symbol, val)
    if name === :permissions
        Swagger.validate_param(name, "StorageAccountKey", :enum, val, _allowed_StorageAccountKey_permissions)
    end
end
