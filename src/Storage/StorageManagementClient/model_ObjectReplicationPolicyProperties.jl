# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct ObjectReplicationPolicyProperties <: SwaggerModel
    policyId::Any # spec type: Union{ Nothing, String } # spec name: policyId
    enabledTime::Any # spec type: Union{ Nothing, DateTime } # spec name: enabledTime
    sourceAccount::Any # spec type: Union{ Nothing, String } # spec name: sourceAccount
    destinationAccount::Any # spec type: Union{ Nothing, String } # spec name: destinationAccount
    rules::Any # spec type: Union{ Nothing, Vector{ObjectReplicationPolicyRule} } # spec name: rules

    function ObjectReplicationPolicyProperties(;policyId=nothing, enabledTime=nothing, sourceAccount=nothing, destinationAccount=nothing, rules=nothing)
        o = new()
        validate_property(ObjectReplicationPolicyProperties, Symbol("policyId"), policyId)
        setfield!(o, Symbol("policyId"), policyId)
        validate_property(ObjectReplicationPolicyProperties, Symbol("enabledTime"), enabledTime)
        setfield!(o, Symbol("enabledTime"), enabledTime)
        validate_property(ObjectReplicationPolicyProperties, Symbol("sourceAccount"), sourceAccount)
        setfield!(o, Symbol("sourceAccount"), sourceAccount)
        validate_property(ObjectReplicationPolicyProperties, Symbol("destinationAccount"), destinationAccount)
        setfield!(o, Symbol("destinationAccount"), destinationAccount)
        validate_property(ObjectReplicationPolicyProperties, Symbol("rules"), rules)
        setfield!(o, Symbol("rules"), rules)
        o
    end
end # type ObjectReplicationPolicyProperties

const _property_map_ObjectReplicationPolicyProperties = Dict{Symbol,Symbol}(Symbol("policyId")=>Symbol("policyId"), Symbol("enabledTime")=>Symbol("enabledTime"), Symbol("sourceAccount")=>Symbol("sourceAccount"), Symbol("destinationAccount")=>Symbol("destinationAccount"), Symbol("rules")=>Symbol("rules"))
const _property_types_ObjectReplicationPolicyProperties = Dict{Symbol,String}(Symbol("policyId")=>"String", Symbol("enabledTime")=>"DateTime", Symbol("sourceAccount")=>"String", Symbol("destinationAccount")=>"String", Symbol("rules")=>"Vector{ObjectReplicationPolicyRule}")
Base.propertynames(::Type{ ObjectReplicationPolicyProperties }) = collect(keys(_property_map_ObjectReplicationPolicyProperties))
Swagger.property_type(::Type{ ObjectReplicationPolicyProperties }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ObjectReplicationPolicyProperties[name]))}
Swagger.field_name(::Type{ ObjectReplicationPolicyProperties }, property_name::Symbol) =  _property_map_ObjectReplicationPolicyProperties[property_name]

function check_required(o::ObjectReplicationPolicyProperties)
    (getproperty(o, Symbol("sourceAccount")) === nothing) && (return false)
    (getproperty(o, Symbol("destinationAccount")) === nothing) && (return false)
    true
end

function validate_property(::Type{ ObjectReplicationPolicyProperties }, name::Symbol, val)
end
