# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct ManagementPolicySnapShot <: SwaggerModel
    delete::Any # spec type: Union{ Nothing, DateAfterCreation } # spec name: delete

    function ManagementPolicySnapShot(;delete=nothing)
        o = new()
        validate_property(ManagementPolicySnapShot, Symbol("delete"), delete)
        setfield!(o, Symbol("delete"), delete)
        o
    end
end # type ManagementPolicySnapShot

const _property_map_ManagementPolicySnapShot = Dict{Symbol,Symbol}(Symbol("delete")=>Symbol("delete"))
const _property_types_ManagementPolicySnapShot = Dict{Symbol,String}(Symbol("delete")=>"DateAfterCreation")
Base.propertynames(::Type{ ManagementPolicySnapShot }) = collect(keys(_property_map_ManagementPolicySnapShot))
Swagger.property_type(::Type{ ManagementPolicySnapShot }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ManagementPolicySnapShot[name]))}
Swagger.field_name(::Type{ ManagementPolicySnapShot }, property_name::Symbol) =  _property_map_ManagementPolicySnapShot[property_name]

function check_required(o::ManagementPolicySnapShot)
    true
end

function validate_property(::Type{ ManagementPolicySnapShot }, name::Symbol, val)
end
