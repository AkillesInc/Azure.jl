# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.

mutable struct EncryptionServices <: SwaggerModel
    blob::Union{ Nothing, EncryptionService } # blob
    file::Union{ Nothing, EncryptionService } # file
    table::Union{ Nothing, EncryptionService } # table
    queue::Union{ Nothing, EncryptionService } # queue

    function EncryptionServices(;blob=nothing, file=nothing, table=nothing, queue=nothing)
        o = new()
        set_field!(o, :blob, blob)
        set_field!(o, :file, file)
        set_field!(o, :table, table)
        set_field!(o, :queue, queue)
        o
    end
end # type EncryptionServices

const _name_map_EncryptionServices = Dict{String,Symbol}(["blob"=>:blob, "file"=>:file, "table"=>:table, "queue"=>:queue])
const _field_map_EncryptionServices = Dict{Symbol,String}([:blob=>"blob", :file=>"file", :table=>"table", :queue=>"queue"])
Swagger.name_map(::Type{ EncryptionServices }) = _name_map_EncryptionServices
Swagger.field_map(::Type{ EncryptionServices }) = _field_map_EncryptionServices

function check_required(o::EncryptionServices)
    true
end

function validate_field(o::EncryptionServices, name::Symbol, val)
end
