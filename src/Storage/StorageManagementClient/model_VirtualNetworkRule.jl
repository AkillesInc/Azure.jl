# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.

type VirtualNetworkRule <: SwaggerModel
    id::Nullable{ String } # id
    action::Nullable{ String } # action
    state::Nullable{ String } # state

    function VirtualNetworkRule(;id=nothing, action="Allow", state=nothing)
        o = new()
        set_field!(o, :id, id)
        set_field!(o, :action, action)
        set_field!(o, :state, state)
        o
    end
end # type VirtualNetworkRule

const _name_map_VirtualNetworkRule = Dict{String,Symbol}(["id"=>:id, "action"=>:action, "state"=>:state])
const _field_map_VirtualNetworkRule = Dict{Symbol,String}([:id=>"id", :action=>"action", :state=>"state"])
Swagger.name_map(::Type{ VirtualNetworkRule }) = _name_map_VirtualNetworkRule
Swagger.field_map(::Type{ VirtualNetworkRule }) = _field_map_VirtualNetworkRule

const _allowed_VirtualNetworkRule_action = ["Allow"]

const _allowed_VirtualNetworkRule_state = ["provisioning", "deprovisioning", "succeeded", "failed", "networkSourceDeleted"]

function check_required(o::VirtualNetworkRule)
    isnull(o.id) && (return false)
    true
end

function validate_field(o::VirtualNetworkRule, name::Symbol, val)
    if name === :action
        Swagger.validate_param(name, "VirtualNetworkRule", :enum, val, _allowed_VirtualNetworkRule_action)
    end
    if name === :state
        Swagger.validate_param(name, "VirtualNetworkRule", :enum, val, _allowed_VirtualNetworkRule_state)
    end
end
