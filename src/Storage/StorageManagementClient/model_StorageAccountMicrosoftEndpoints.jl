# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct StorageAccountMicrosoftEndpoints <: SwaggerModel
    blob::Any # spec type: Union{ Nothing, String } # spec name: blob
    queue::Any # spec type: Union{ Nothing, String } # spec name: queue
    table::Any # spec type: Union{ Nothing, String } # spec name: table
    file::Any # spec type: Union{ Nothing, String } # spec name: file
    web::Any # spec type: Union{ Nothing, String } # spec name: web
    dfs::Any # spec type: Union{ Nothing, String } # spec name: dfs

    function StorageAccountMicrosoftEndpoints(;blob=nothing, queue=nothing, table=nothing, file=nothing, web=nothing, dfs=nothing)
        o = new()
        validate_property(StorageAccountMicrosoftEndpoints, Symbol("blob"), blob)
        setfield!(o, Symbol("blob"), blob)
        validate_property(StorageAccountMicrosoftEndpoints, Symbol("queue"), queue)
        setfield!(o, Symbol("queue"), queue)
        validate_property(StorageAccountMicrosoftEndpoints, Symbol("table"), table)
        setfield!(o, Symbol("table"), table)
        validate_property(StorageAccountMicrosoftEndpoints, Symbol("file"), file)
        setfield!(o, Symbol("file"), file)
        validate_property(StorageAccountMicrosoftEndpoints, Symbol("web"), web)
        setfield!(o, Symbol("web"), web)
        validate_property(StorageAccountMicrosoftEndpoints, Symbol("dfs"), dfs)
        setfield!(o, Symbol("dfs"), dfs)
        o
    end
end # type StorageAccountMicrosoftEndpoints

const _property_map_StorageAccountMicrosoftEndpoints = Dict{Symbol,Symbol}(Symbol("blob")=>Symbol("blob"), Symbol("queue")=>Symbol("queue"), Symbol("table")=>Symbol("table"), Symbol("file")=>Symbol("file"), Symbol("web")=>Symbol("web"), Symbol("dfs")=>Symbol("dfs"))
const _property_types_StorageAccountMicrosoftEndpoints = Dict{Symbol,String}(Symbol("blob")=>"String", Symbol("queue")=>"String", Symbol("table")=>"String", Symbol("file")=>"String", Symbol("web")=>"String", Symbol("dfs")=>"String")
Base.propertynames(::Type{ StorageAccountMicrosoftEndpoints }) = collect(keys(_property_map_StorageAccountMicrosoftEndpoints))
Swagger.property_type(::Type{ StorageAccountMicrosoftEndpoints }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_StorageAccountMicrosoftEndpoints[name]))}
Swagger.field_name(::Type{ StorageAccountMicrosoftEndpoints }, property_name::Symbol) =  _property_map_StorageAccountMicrosoftEndpoints[property_name]

function check_required(o::StorageAccountMicrosoftEndpoints)
    true
end

function validate_property(::Type{ StorageAccountMicrosoftEndpoints }, name::Symbol, val)
end
