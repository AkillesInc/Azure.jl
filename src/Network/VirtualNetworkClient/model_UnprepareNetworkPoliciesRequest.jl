# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct UnprepareNetworkPoliciesRequest <: SwaggerModel
    serviceName::Any # spec type: Union{ Nothing, String } # spec name: serviceName

    function UnprepareNetworkPoliciesRequest(;serviceName=nothing)
        o = new()
        validate_property(UnprepareNetworkPoliciesRequest, Symbol("serviceName"), serviceName)
        setfield!(o, Symbol("serviceName"), serviceName)
        o
    end
end # type UnprepareNetworkPoliciesRequest

const _property_map_UnprepareNetworkPoliciesRequest = Dict{Symbol,Symbol}(Symbol("serviceName")=>Symbol("serviceName"))
const _property_types_UnprepareNetworkPoliciesRequest = Dict{Symbol,String}(Symbol("serviceName")=>"String")
Base.propertynames(::Type{ UnprepareNetworkPoliciesRequest }) = collect(keys(_property_map_UnprepareNetworkPoliciesRequest))
Swagger.property_type(::Type{ UnprepareNetworkPoliciesRequest }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_UnprepareNetworkPoliciesRequest[name]))}
Swagger.field_name(::Type{ UnprepareNetworkPoliciesRequest }, property_name::Symbol) =  _property_map_UnprepareNetworkPoliciesRequest[property_name]

function check_required(o::UnprepareNetworkPoliciesRequest)
    true
end

function validate_property(::Type{ UnprepareNetworkPoliciesRequest }, name::Symbol, val)
end
