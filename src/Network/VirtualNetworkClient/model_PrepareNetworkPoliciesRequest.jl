# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct PrepareNetworkPoliciesRequest <: SwaggerModel
    serviceName::Any # spec type: Union{ Nothing, String } # spec name: serviceName
    networkIntentPolicyConfigurations::Any # spec type: Union{ Nothing, Vector{NetworkIntentPolicyConfiguration} } # spec name: networkIntentPolicyConfigurations

    function PrepareNetworkPoliciesRequest(;serviceName=nothing, networkIntentPolicyConfigurations=nothing)
        o = new()
        validate_property(PrepareNetworkPoliciesRequest, Symbol("serviceName"), serviceName)
        setfield!(o, Symbol("serviceName"), serviceName)
        validate_property(PrepareNetworkPoliciesRequest, Symbol("networkIntentPolicyConfigurations"), networkIntentPolicyConfigurations)
        setfield!(o, Symbol("networkIntentPolicyConfigurations"), networkIntentPolicyConfigurations)
        o
    end
end # type PrepareNetworkPoliciesRequest

const _property_map_PrepareNetworkPoliciesRequest = Dict{Symbol,Symbol}(Symbol("serviceName")=>Symbol("serviceName"), Symbol("networkIntentPolicyConfigurations")=>Symbol("networkIntentPolicyConfigurations"))
const _property_types_PrepareNetworkPoliciesRequest = Dict{Symbol,String}(Symbol("serviceName")=>"String", Symbol("networkIntentPolicyConfigurations")=>"Vector{NetworkIntentPolicyConfiguration}")
Base.propertynames(::Type{ PrepareNetworkPoliciesRequest }) = collect(keys(_property_map_PrepareNetworkPoliciesRequest))
Swagger.property_type(::Type{ PrepareNetworkPoliciesRequest }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_PrepareNetworkPoliciesRequest[name]))}
Swagger.field_name(::Type{ PrepareNetworkPoliciesRequest }, property_name::Symbol) =  _property_map_PrepareNetworkPoliciesRequest[property_name]

function check_required(o::PrepareNetworkPoliciesRequest)
    true
end

function validate_property(::Type{ PrepareNetworkPoliciesRequest }, name::Symbol, val)
end
