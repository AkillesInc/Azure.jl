# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct CloudErrorBody <: SwaggerModel
    code::Any # spec type: Union{ Nothing, String } # spec name: code
    message::Any # spec type: Union{ Nothing, String } # spec name: message
    target::Any # spec type: Union{ Nothing, String } # spec name: target
    details::Any # spec type: Union{ Nothing, Vector{CloudErrorBody} } # spec name: details

    function CloudErrorBody(;code=nothing, message=nothing, target=nothing, details=nothing)
        o = new()
        validate_property(CloudErrorBody, Symbol("code"), code)
        setfield!(o, Symbol("code"), code)
        validate_property(CloudErrorBody, Symbol("message"), message)
        setfield!(o, Symbol("message"), message)
        validate_property(CloudErrorBody, Symbol("target"), target)
        setfield!(o, Symbol("target"), target)
        validate_property(CloudErrorBody, Symbol("details"), details)
        setfield!(o, Symbol("details"), details)
        o
    end
end # type CloudErrorBody

const _property_map_CloudErrorBody = Dict{Symbol,Symbol}(Symbol("code")=>Symbol("code"), Symbol("message")=>Symbol("message"), Symbol("target")=>Symbol("target"), Symbol("details")=>Symbol("details"))
const _property_types_CloudErrorBody = Dict{Symbol,String}(Symbol("code")=>"String", Symbol("message")=>"String", Symbol("target")=>"String", Symbol("details")=>"Vector{CloudErrorBody}")
Base.propertynames(::Type{ CloudErrorBody }) = collect(keys(_property_map_CloudErrorBody))
Swagger.property_type(::Type{ CloudErrorBody }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_CloudErrorBody[name]))}
Swagger.field_name(::Type{ CloudErrorBody }, property_name::Symbol) =  _property_map_CloudErrorBody[property_name]

function check_required(o::CloudErrorBody)
    true
end

function validate_property(::Type{ CloudErrorBody }, name::Symbol, val)
end
