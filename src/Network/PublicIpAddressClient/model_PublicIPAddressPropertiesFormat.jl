# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.

type PublicIPAddressPropertiesFormat <: SwaggerModel
    publicIPAllocationMethod::Nullable{ String } # publicIPAllocationMethod
    publicIPAddressVersion::Nullable{ String } # publicIPAddressVersion
    ipConfiguration::Nullable{ IPConfiguration } # ipConfiguration
    dnsSettings::Nullable{ PublicIPAddressDnsSettings } # dnsSettings
    ipAddress::Nullable{ String } # ipAddress
    idleTimeoutInMinutes::Nullable{ Int32 } # idleTimeoutInMinutes
    resourceGuid::Nullable{ String } # resourceGuid
    provisioningState::Nullable{ String } # provisioningState

    function PublicIPAddressPropertiesFormat(;publicIPAllocationMethod=nothing, publicIPAddressVersion=nothing, ipConfiguration=nothing, dnsSettings=nothing, ipAddress=nothing, idleTimeoutInMinutes=nothing, resourceGuid=nothing, provisioningState=nothing)
        o = new()
        set_field!(o, :publicIPAllocationMethod, publicIPAllocationMethod)
        set_field!(o, :publicIPAddressVersion, publicIPAddressVersion)
        set_field!(o, :ipConfiguration, ipConfiguration)
        set_field!(o, :dnsSettings, dnsSettings)
        set_field!(o, :ipAddress, ipAddress)
        set_field!(o, :idleTimeoutInMinutes, idleTimeoutInMinutes)
        set_field!(o, :resourceGuid, resourceGuid)
        set_field!(o, :provisioningState, provisioningState)
        o
    end
end # type PublicIPAddressPropertiesFormat

const _name_map_PublicIPAddressPropertiesFormat = Dict{String,Symbol}(["publicIPAllocationMethod"=>:publicIPAllocationMethod, "publicIPAddressVersion"=>:publicIPAddressVersion, "ipConfiguration"=>:ipConfiguration, "dnsSettings"=>:dnsSettings, "ipAddress"=>:ipAddress, "idleTimeoutInMinutes"=>:idleTimeoutInMinutes, "resourceGuid"=>:resourceGuid, "provisioningState"=>:provisioningState])
const _field_map_PublicIPAddressPropertiesFormat = Dict{Symbol,String}([:publicIPAllocationMethod=>"publicIPAllocationMethod", :publicIPAddressVersion=>"publicIPAddressVersion", :ipConfiguration=>"ipConfiguration", :dnsSettings=>"dnsSettings", :ipAddress=>"ipAddress", :idleTimeoutInMinutes=>"idleTimeoutInMinutes", :resourceGuid=>"resourceGuid", :provisioningState=>"provisioningState"])
Swagger.name_map(::Type{ PublicIPAddressPropertiesFormat }) = _name_map_PublicIPAddressPropertiesFormat
Swagger.field_map(::Type{ PublicIPAddressPropertiesFormat }) = _field_map_PublicIPAddressPropertiesFormat

const _allowed_PublicIPAddressPropertiesFormat_publicIPAllocationMethod = ["Static", "Dynamic"]

const _allowed_PublicIPAddressPropertiesFormat_publicIPAddressVersion = ["IPv4", "IPv6"]

function check_required(o::PublicIPAddressPropertiesFormat)
    true
end

function validate_field(o::PublicIPAddressPropertiesFormat, name::Symbol, val)
    if name === :publicIPAllocationMethod
        Swagger.validate_param(name, "PublicIPAddressPropertiesFormat", :enum, val, _allowed_PublicIPAddressPropertiesFormat_publicIPAllocationMethod)
    end
    if name === :publicIPAddressVersion
        Swagger.validate_param(name, "PublicIPAddressPropertiesFormat", :enum, val, _allowed_PublicIPAddressPropertiesFormat_publicIPAddressVersion)
    end
end
