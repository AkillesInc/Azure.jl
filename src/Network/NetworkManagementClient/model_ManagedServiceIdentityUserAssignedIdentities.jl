# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct ManagedServiceIdentityUserAssignedIdentities <: SwaggerModel
    principalId::Any # spec type: Union{ Nothing, String } # spec name: principalId
    clientId::Any # spec type: Union{ Nothing, String } # spec name: clientId

    function ManagedServiceIdentityUserAssignedIdentities(;principalId=nothing, clientId=nothing)
        o = new()
        validate_property(ManagedServiceIdentityUserAssignedIdentities, Symbol("principalId"), principalId)
        setfield!(o, Symbol("principalId"), principalId)
        validate_property(ManagedServiceIdentityUserAssignedIdentities, Symbol("clientId"), clientId)
        setfield!(o, Symbol("clientId"), clientId)
        o
    end
end # type ManagedServiceIdentityUserAssignedIdentities

const _property_map_ManagedServiceIdentityUserAssignedIdentities = Dict{Symbol,Symbol}(Symbol("principalId")=>Symbol("principalId"), Symbol("clientId")=>Symbol("clientId"))
const _property_types_ManagedServiceIdentityUserAssignedIdentities = Dict{Symbol,String}(Symbol("principalId")=>"String", Symbol("clientId")=>"String")
Base.propertynames(::Type{ ManagedServiceIdentityUserAssignedIdentities }) = collect(keys(_property_map_ManagedServiceIdentityUserAssignedIdentities))
Swagger.property_type(::Type{ ManagedServiceIdentityUserAssignedIdentities }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ManagedServiceIdentityUserAssignedIdentities[name]))}
Swagger.field_name(::Type{ ManagedServiceIdentityUserAssignedIdentities }, property_name::Symbol) =  _property_map_ManagedServiceIdentityUserAssignedIdentities[property_name]

function check_required(o::ManagedServiceIdentityUserAssignedIdentities)
    true
end

function validate_property(::Type{ ManagedServiceIdentityUserAssignedIdentities }, name::Symbol, val)
end
