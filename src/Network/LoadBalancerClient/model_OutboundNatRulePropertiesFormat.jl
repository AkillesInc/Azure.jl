# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.

mutable struct OutboundNatRulePropertiesFormat <: SwaggerModel
    allocatedOutboundPorts::Union{ Nothing, Int32 } # allocatedOutboundPorts
    frontendIPConfigurations::Union{ Nothing, Vector{SubResource} } # frontendIPConfigurations
    backendAddressPool::Union{ Nothing, SubResource } # backendAddressPool
    provisioningState::Union{ Nothing, String } # provisioningState

    function OutboundNatRulePropertiesFormat(;allocatedOutboundPorts=nothing, frontendIPConfigurations=nothing, backendAddressPool=nothing, provisioningState=nothing)
        o = new()
        set_field!(o, :allocatedOutboundPorts, allocatedOutboundPorts)
        set_field!(o, :frontendIPConfigurations, frontendIPConfigurations)
        set_field!(o, :backendAddressPool, backendAddressPool)
        set_field!(o, :provisioningState, provisioningState)
        o
    end
end # type OutboundNatRulePropertiesFormat

const _name_map_OutboundNatRulePropertiesFormat = Dict{String,Symbol}(["allocatedOutboundPorts"=>:allocatedOutboundPorts, "frontendIPConfigurations"=>:frontendIPConfigurations, "backendAddressPool"=>:backendAddressPool, "provisioningState"=>:provisioningState])
const _field_map_OutboundNatRulePropertiesFormat = Dict{Symbol,String}([:allocatedOutboundPorts=>"allocatedOutboundPorts", :frontendIPConfigurations=>"frontendIPConfigurations", :backendAddressPool=>"backendAddressPool", :provisioningState=>"provisioningState"])
Swagger.name_map(::Type{ OutboundNatRulePropertiesFormat }) = _name_map_OutboundNatRulePropertiesFormat
Swagger.field_map(::Type{ OutboundNatRulePropertiesFormat }) = _field_map_OutboundNatRulePropertiesFormat

function check_required(o::OutboundNatRulePropertiesFormat)
    (o.backendAddressPool === nothing) && (return false)
    true
end

function validate_field(o::OutboundNatRulePropertiesFormat, name::Symbol, val)
end
