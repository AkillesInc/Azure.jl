# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.

mutable struct BackendAddressPoolPropertiesFormat <: SwaggerModel
    backendIPConfigurations::Union{ Nothing, Vector{NetworkInterfaceIPConfiguration} } # backendIPConfigurations
    loadBalancingRules::Union{ Nothing, Vector{SubResource} } # loadBalancingRules
    outboundNatRule::Union{ Nothing, SubResource } # outboundNatRule
    provisioningState::Union{ Nothing, String } # provisioningState

    function BackendAddressPoolPropertiesFormat(;backendIPConfigurations=nothing, loadBalancingRules=nothing, outboundNatRule=nothing, provisioningState=nothing)
        o = new()
        set_field!(o, :backendIPConfigurations, backendIPConfigurations)
        set_field!(o, :loadBalancingRules, loadBalancingRules)
        set_field!(o, :outboundNatRule, outboundNatRule)
        set_field!(o, :provisioningState, provisioningState)
        o
    end
end # type BackendAddressPoolPropertiesFormat

const _name_map_BackendAddressPoolPropertiesFormat = Dict{String,Symbol}(["backendIPConfigurations"=>:backendIPConfigurations, "loadBalancingRules"=>:loadBalancingRules, "outboundNatRule"=>:outboundNatRule, "provisioningState"=>:provisioningState])
const _field_map_BackendAddressPoolPropertiesFormat = Dict{Symbol,String}([:backendIPConfigurations=>"backendIPConfigurations", :loadBalancingRules=>"loadBalancingRules", :outboundNatRule=>"outboundNatRule", :provisioningState=>"provisioningState"])
Swagger.name_map(::Type{ BackendAddressPoolPropertiesFormat }) = _name_map_BackendAddressPoolPropertiesFormat
Swagger.field_map(::Type{ BackendAddressPoolPropertiesFormat }) = _field_map_BackendAddressPoolPropertiesFormat

function check_required(o::BackendAddressPoolPropertiesFormat)
    true
end

function validate_field(o::BackendAddressPoolPropertiesFormat, name::Symbol, val)
end
