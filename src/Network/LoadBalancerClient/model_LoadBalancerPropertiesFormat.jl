# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.

type LoadBalancerPropertiesFormat <: SwaggerModel
    frontendIPConfigurations::Nullable{ Vector{FrontendIPConfiguration} } # frontendIPConfigurations
    backendAddressPools::Nullable{ Vector{BackendAddressPool} } # backendAddressPools
    loadBalancingRules::Nullable{ Vector{LoadBalancingRule} } # loadBalancingRules
    probes::Nullable{ Vector{Probe} } # probes
    inboundNatRules::Nullable{ Vector{InboundNatRule} } # inboundNatRules
    inboundNatPools::Nullable{ Vector{InboundNatPool} } # inboundNatPools
    outboundNatRules::Nullable{ Vector{OutboundNatRule} } # outboundNatRules
    resourceGuid::Nullable{ String } # resourceGuid
    provisioningState::Nullable{ String } # provisioningState

    function LoadBalancerPropertiesFormat(;frontendIPConfigurations=nothing, backendAddressPools=nothing, loadBalancingRules=nothing, probes=nothing, inboundNatRules=nothing, inboundNatPools=nothing, outboundNatRules=nothing, resourceGuid=nothing, provisioningState=nothing)
        o = new()
        set_field!(o, :frontendIPConfigurations, frontendIPConfigurations)
        set_field!(o, :backendAddressPools, backendAddressPools)
        set_field!(o, :loadBalancingRules, loadBalancingRules)
        set_field!(o, :probes, probes)
        set_field!(o, :inboundNatRules, inboundNatRules)
        set_field!(o, :inboundNatPools, inboundNatPools)
        set_field!(o, :outboundNatRules, outboundNatRules)
        set_field!(o, :resourceGuid, resourceGuid)
        set_field!(o, :provisioningState, provisioningState)
        o
    end
end # type LoadBalancerPropertiesFormat

const _name_map_LoadBalancerPropertiesFormat = Dict{String,Symbol}(["frontendIPConfigurations"=>:frontendIPConfigurations, "backendAddressPools"=>:backendAddressPools, "loadBalancingRules"=>:loadBalancingRules, "probes"=>:probes, "inboundNatRules"=>:inboundNatRules, "inboundNatPools"=>:inboundNatPools, "outboundNatRules"=>:outboundNatRules, "resourceGuid"=>:resourceGuid, "provisioningState"=>:provisioningState])
const _field_map_LoadBalancerPropertiesFormat = Dict{Symbol,String}([:frontendIPConfigurations=>"frontendIPConfigurations", :backendAddressPools=>"backendAddressPools", :loadBalancingRules=>"loadBalancingRules", :probes=>"probes", :inboundNatRules=>"inboundNatRules", :inboundNatPools=>"inboundNatPools", :outboundNatRules=>"outboundNatRules", :resourceGuid=>"resourceGuid", :provisioningState=>"provisioningState"])
Swagger.name_map(::Type{ LoadBalancerPropertiesFormat }) = _name_map_LoadBalancerPropertiesFormat
Swagger.field_map(::Type{ LoadBalancerPropertiesFormat }) = _field_map_LoadBalancerPropertiesFormat

function check_required(o::LoadBalancerPropertiesFormat)
    true
end

function validate_field(o::LoadBalancerPropertiesFormat, name::Symbol, val)
end
