# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.

mutable struct ApplicationGatewaySku <: SwaggerModel
    name::Union{ Nothing, String } # name
    tier::Union{ Nothing, String } # tier
    capacity::Union{ Nothing, Int32 } # capacity

    function ApplicationGatewaySku(;name=nothing, tier=nothing, capacity=nothing)
        o = new()
        set_field!(o, :name, name)
        set_field!(o, :tier, tier)
        set_field!(o, :capacity, capacity)
        o
    end
end # type ApplicationGatewaySku

const _name_map_ApplicationGatewaySku = Dict{String,Symbol}(["name"=>:name, "tier"=>:tier, "capacity"=>:capacity])
const _field_map_ApplicationGatewaySku = Dict{Symbol,String}([:name=>"name", :tier=>"tier", :capacity=>"capacity"])
Swagger.name_map(::Type{ ApplicationGatewaySku }) = _name_map_ApplicationGatewaySku
Swagger.field_map(::Type{ ApplicationGatewaySku }) = _field_map_ApplicationGatewaySku

const _allowed_ApplicationGatewaySku_name = ["Standard_Small", "Standard_Medium", "Standard_Large", "WAF_Medium", "WAF_Large"]

const _allowed_ApplicationGatewaySku_tier = ["Standard", "WAF"]

function check_required(o::ApplicationGatewaySku)
    true
end

function validate_field(o::ApplicationGatewaySku, name::Symbol, val)
    if name === :name
        Swagger.validate_param(name, "ApplicationGatewaySku", :enum, val, _allowed_ApplicationGatewaySku_name)
    end
    if name === :tier
        Swagger.validate_param(name, "ApplicationGatewaySku", :enum, val, _allowed_ApplicationGatewaySku_tier)
    end
end
