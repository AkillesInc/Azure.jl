# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.

mutable struct ApplicationGatewayBackendHealthServer <: SwaggerModel
    address::Union{ Nothing, String } # address
    ipConfiguration::Union{ Nothing, SubResource } # ipConfiguration
    health::Union{ Nothing, String } # health

    function ApplicationGatewayBackendHealthServer(;address=nothing, ipConfiguration=nothing, health=nothing)
        o = new()
        set_field!(o, :address, address)
        set_field!(o, :ipConfiguration, ipConfiguration)
        set_field!(o, :health, health)
        o
    end
end # type ApplicationGatewayBackendHealthServer

const _name_map_ApplicationGatewayBackendHealthServer = Dict{String,Symbol}(["address"=>:address, "ipConfiguration"=>:ipConfiguration, "health"=>:health])
const _field_map_ApplicationGatewayBackendHealthServer = Dict{Symbol,String}([:address=>"address", :ipConfiguration=>"ipConfiguration", :health=>"health"])
Swagger.name_map(::Type{ ApplicationGatewayBackendHealthServer }) = _name_map_ApplicationGatewayBackendHealthServer
Swagger.field_map(::Type{ ApplicationGatewayBackendHealthServer }) = _field_map_ApplicationGatewayBackendHealthServer

const _allowed_ApplicationGatewayBackendHealthServer_health = ["Unknown", "Up", "Down", "Partial", "Draining"]

function check_required(o::ApplicationGatewayBackendHealthServer)
    true
end

function validate_field(o::ApplicationGatewayBackendHealthServer, name::Symbol, val)
    if name === :health
        Swagger.validate_param(name, "ApplicationGatewayBackendHealthServer", :enum, val, _allowed_ApplicationGatewayBackendHealthServer_health)
    end
end
