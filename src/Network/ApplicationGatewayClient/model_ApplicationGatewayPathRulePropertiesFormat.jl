# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.

mutable struct ApplicationGatewayPathRulePropertiesFormat <: SwaggerModel
    paths::Union{ Nothing, Vector{String} } # paths
    backendAddressPool::Union{ Nothing, SubResource } # backendAddressPool
    backendHttpSettings::Union{ Nothing, SubResource } # backendHttpSettings
    provisioningState::Union{ Nothing, String } # provisioningState

    function ApplicationGatewayPathRulePropertiesFormat(;paths=nothing, backendAddressPool=nothing, backendHttpSettings=nothing, provisioningState=nothing)
        o = new()
        set_field!(o, :paths, paths)
        set_field!(o, :backendAddressPool, backendAddressPool)
        set_field!(o, :backendHttpSettings, backendHttpSettings)
        set_field!(o, :provisioningState, provisioningState)
        o
    end
end # type ApplicationGatewayPathRulePropertiesFormat

const _name_map_ApplicationGatewayPathRulePropertiesFormat = Dict{String,Symbol}(["paths"=>:paths, "backendAddressPool"=>:backendAddressPool, "backendHttpSettings"=>:backendHttpSettings, "provisioningState"=>:provisioningState])
const _field_map_ApplicationGatewayPathRulePropertiesFormat = Dict{Symbol,String}([:paths=>"paths", :backendAddressPool=>"backendAddressPool", :backendHttpSettings=>"backendHttpSettings", :provisioningState=>"provisioningState"])
Swagger.name_map(::Type{ ApplicationGatewayPathRulePropertiesFormat }) = _name_map_ApplicationGatewayPathRulePropertiesFormat
Swagger.field_map(::Type{ ApplicationGatewayPathRulePropertiesFormat }) = _field_map_ApplicationGatewayPathRulePropertiesFormat

function check_required(o::ApplicationGatewayPathRulePropertiesFormat)
    true
end

function validate_field(o::ApplicationGatewayPathRulePropertiesFormat, name::Symbol, val)
end
