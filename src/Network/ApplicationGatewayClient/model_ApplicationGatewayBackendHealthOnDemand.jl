# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct ApplicationGatewayBackendHealthOnDemand <: SwaggerModel
    backendAddressPool::Any # spec type: Union{ Nothing, ApplicationGatewayBackendAddressPool } # spec name: backendAddressPool
    backendHealthHttpSettings::Any # spec type: Union{ Nothing, ApplicationGatewayBackendHealthHttpSettings } # spec name: backendHealthHttpSettings

    function ApplicationGatewayBackendHealthOnDemand(;backendAddressPool=nothing, backendHealthHttpSettings=nothing)
        o = new()
        validate_property(ApplicationGatewayBackendHealthOnDemand, Symbol("backendAddressPool"), backendAddressPool)
        setfield!(o, Symbol("backendAddressPool"), backendAddressPool)
        validate_property(ApplicationGatewayBackendHealthOnDemand, Symbol("backendHealthHttpSettings"), backendHealthHttpSettings)
        setfield!(o, Symbol("backendHealthHttpSettings"), backendHealthHttpSettings)
        o
    end
end # type ApplicationGatewayBackendHealthOnDemand

const _property_map_ApplicationGatewayBackendHealthOnDemand = Dict{Symbol,Symbol}(Symbol("backendAddressPool")=>Symbol("backendAddressPool"), Symbol("backendHealthHttpSettings")=>Symbol("backendHealthHttpSettings"))
const _property_types_ApplicationGatewayBackendHealthOnDemand = Dict{Symbol,String}(Symbol("backendAddressPool")=>"ApplicationGatewayBackendAddressPool", Symbol("backendHealthHttpSettings")=>"ApplicationGatewayBackendHealthHttpSettings")
Base.propertynames(::Type{ ApplicationGatewayBackendHealthOnDemand }) = collect(keys(_property_map_ApplicationGatewayBackendHealthOnDemand))
Swagger.property_type(::Type{ ApplicationGatewayBackendHealthOnDemand }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ApplicationGatewayBackendHealthOnDemand[name]))}
Swagger.field_name(::Type{ ApplicationGatewayBackendHealthOnDemand }, property_name::Symbol) =  _property_map_ApplicationGatewayBackendHealthOnDemand[property_name]

function check_required(o::ApplicationGatewayBackendHealthOnDemand)
    true
end

function validate_property(::Type{ ApplicationGatewayBackendHealthOnDemand }, name::Symbol, val)
end
