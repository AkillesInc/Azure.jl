# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct ApplicationGatewayCustomError <: SwaggerModel
    statusCode::Any # spec type: Union{ Nothing, String } # spec name: statusCode
    customErrorPageUrl::Any # spec type: Union{ Nothing, String } # spec name: customErrorPageUrl

    function ApplicationGatewayCustomError(;statusCode=nothing, customErrorPageUrl=nothing)
        o = new()
        validate_property(ApplicationGatewayCustomError, Symbol("statusCode"), statusCode)
        setfield!(o, Symbol("statusCode"), statusCode)
        validate_property(ApplicationGatewayCustomError, Symbol("customErrorPageUrl"), customErrorPageUrl)
        setfield!(o, Symbol("customErrorPageUrl"), customErrorPageUrl)
        o
    end
end # type ApplicationGatewayCustomError

const _property_map_ApplicationGatewayCustomError = Dict{Symbol,Symbol}(Symbol("statusCode")=>Symbol("statusCode"), Symbol("customErrorPageUrl")=>Symbol("customErrorPageUrl"))
const _property_types_ApplicationGatewayCustomError = Dict{Symbol,String}(Symbol("statusCode")=>"String", Symbol("customErrorPageUrl")=>"String")
Base.propertynames(::Type{ ApplicationGatewayCustomError }) = collect(keys(_property_map_ApplicationGatewayCustomError))
Swagger.property_type(::Type{ ApplicationGatewayCustomError }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ApplicationGatewayCustomError[name]))}
Swagger.field_name(::Type{ ApplicationGatewayCustomError }, property_name::Symbol) =  _property_map_ApplicationGatewayCustomError[property_name]

const _allowed_ApplicationGatewayCustomError_statusCode = ["HttpStatus403", "HttpStatus502"]

function check_required(o::ApplicationGatewayCustomError)
    true
end

function validate_property(::Type{ ApplicationGatewayCustomError }, name::Symbol, val)
    if name === Symbol("statusCode")
        Swagger.validate_param(name, "ApplicationGatewayCustomError", :enum, val, _allowed_ApplicationGatewayCustomError_statusCode)
    end
end
