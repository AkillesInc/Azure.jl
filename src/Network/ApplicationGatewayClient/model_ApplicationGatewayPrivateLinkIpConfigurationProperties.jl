# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct ApplicationGatewayPrivateLinkIpConfigurationProperties <: SwaggerModel
    privateIPAddress::Any # spec type: Union{ Nothing, String } # spec name: privateIPAddress
    privateIPAllocationMethod::Any # spec type: Union{ Nothing, IPAllocationMethod } # spec name: privateIPAllocationMethod
    subnet::Any # spec type: Union{ Nothing, SubResource } # spec name: subnet
    primary::Any # spec type: Union{ Nothing, Bool } # spec name: primary
    provisioningState::Any # spec type: Union{ Nothing, ProvisioningState } # spec name: provisioningState

    function ApplicationGatewayPrivateLinkIpConfigurationProperties(;privateIPAddress=nothing, privateIPAllocationMethod=nothing, subnet=nothing, primary=nothing, provisioningState=nothing)
        o = new()
        validate_property(ApplicationGatewayPrivateLinkIpConfigurationProperties, Symbol("privateIPAddress"), privateIPAddress)
        setfield!(o, Symbol("privateIPAddress"), privateIPAddress)
        validate_property(ApplicationGatewayPrivateLinkIpConfigurationProperties, Symbol("privateIPAllocationMethod"), privateIPAllocationMethod)
        setfield!(o, Symbol("privateIPAllocationMethod"), privateIPAllocationMethod)
        validate_property(ApplicationGatewayPrivateLinkIpConfigurationProperties, Symbol("subnet"), subnet)
        setfield!(o, Symbol("subnet"), subnet)
        validate_property(ApplicationGatewayPrivateLinkIpConfigurationProperties, Symbol("primary"), primary)
        setfield!(o, Symbol("primary"), primary)
        validate_property(ApplicationGatewayPrivateLinkIpConfigurationProperties, Symbol("provisioningState"), provisioningState)
        setfield!(o, Symbol("provisioningState"), provisioningState)
        o
    end
end # type ApplicationGatewayPrivateLinkIpConfigurationProperties

const _property_map_ApplicationGatewayPrivateLinkIpConfigurationProperties = Dict{Symbol,Symbol}(Symbol("privateIPAddress")=>Symbol("privateIPAddress"), Symbol("privateIPAllocationMethod")=>Symbol("privateIPAllocationMethod"), Symbol("subnet")=>Symbol("subnet"), Symbol("primary")=>Symbol("primary"), Symbol("provisioningState")=>Symbol("provisioningState"))
const _property_types_ApplicationGatewayPrivateLinkIpConfigurationProperties = Dict{Symbol,String}(Symbol("privateIPAddress")=>"String", Symbol("privateIPAllocationMethod")=>"IPAllocationMethod", Symbol("subnet")=>"SubResource", Symbol("primary")=>"Bool", Symbol("provisioningState")=>"ProvisioningState")
Base.propertynames(::Type{ ApplicationGatewayPrivateLinkIpConfigurationProperties }) = collect(keys(_property_map_ApplicationGatewayPrivateLinkIpConfigurationProperties))
Swagger.property_type(::Type{ ApplicationGatewayPrivateLinkIpConfigurationProperties }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ApplicationGatewayPrivateLinkIpConfigurationProperties[name]))}
Swagger.field_name(::Type{ ApplicationGatewayPrivateLinkIpConfigurationProperties }, property_name::Symbol) =  _property_map_ApplicationGatewayPrivateLinkIpConfigurationProperties[property_name]

function check_required(o::ApplicationGatewayPrivateLinkIpConfigurationProperties)
    true
end

function validate_property(::Type{ ApplicationGatewayPrivateLinkIpConfigurationProperties }, name::Symbol, val)
end
