# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct ApplicationGatewayProbeHealthResponseMatch <: SwaggerModel
    body::Any # spec type: Union{ Nothing, String } # spec name: body
    statusCodes::Any # spec type: Union{ Nothing, Vector{String} } # spec name: statusCodes

    function ApplicationGatewayProbeHealthResponseMatch(;body=nothing, statusCodes=nothing)
        o = new()
        validate_property(ApplicationGatewayProbeHealthResponseMatch, Symbol("body"), body)
        setfield!(o, Symbol("body"), body)
        validate_property(ApplicationGatewayProbeHealthResponseMatch, Symbol("statusCodes"), statusCodes)
        setfield!(o, Symbol("statusCodes"), statusCodes)
        o
    end
end # type ApplicationGatewayProbeHealthResponseMatch

const _property_map_ApplicationGatewayProbeHealthResponseMatch = Dict{Symbol,Symbol}(Symbol("body")=>Symbol("body"), Symbol("statusCodes")=>Symbol("statusCodes"))
const _property_types_ApplicationGatewayProbeHealthResponseMatch = Dict{Symbol,String}(Symbol("body")=>"String", Symbol("statusCodes")=>"Vector{String}")
Base.propertynames(::Type{ ApplicationGatewayProbeHealthResponseMatch }) = collect(keys(_property_map_ApplicationGatewayProbeHealthResponseMatch))
Swagger.property_type(::Type{ ApplicationGatewayProbeHealthResponseMatch }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ApplicationGatewayProbeHealthResponseMatch[name]))}
Swagger.field_name(::Type{ ApplicationGatewayProbeHealthResponseMatch }, property_name::Symbol) =  _property_map_ApplicationGatewayProbeHealthResponseMatch[property_name]

function check_required(o::ApplicationGatewayProbeHealthResponseMatch)
    true
end

function validate_property(::Type{ ApplicationGatewayProbeHealthResponseMatch }, name::Symbol, val)
end
