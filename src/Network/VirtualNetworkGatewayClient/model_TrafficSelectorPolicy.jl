# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct TrafficSelectorPolicy <: SwaggerModel
    localAddressRanges::Any # spec type: Union{ Nothing, Vector{String} } # spec name: localAddressRanges
    remoteAddressRanges::Any # spec type: Union{ Nothing, Vector{String} } # spec name: remoteAddressRanges

    function TrafficSelectorPolicy(;localAddressRanges=nothing, remoteAddressRanges=nothing)
        o = new()
        validate_property(TrafficSelectorPolicy, Symbol("localAddressRanges"), localAddressRanges)
        setfield!(o, Symbol("localAddressRanges"), localAddressRanges)
        validate_property(TrafficSelectorPolicy, Symbol("remoteAddressRanges"), remoteAddressRanges)
        setfield!(o, Symbol("remoteAddressRanges"), remoteAddressRanges)
        o
    end
end # type TrafficSelectorPolicy

const _property_map_TrafficSelectorPolicy = Dict{Symbol,Symbol}(Symbol("localAddressRanges")=>Symbol("localAddressRanges"), Symbol("remoteAddressRanges")=>Symbol("remoteAddressRanges"))
const _property_types_TrafficSelectorPolicy = Dict{Symbol,String}(Symbol("localAddressRanges")=>"Vector{String}", Symbol("remoteAddressRanges")=>"Vector{String}")
Base.propertynames(::Type{ TrafficSelectorPolicy }) = collect(keys(_property_map_TrafficSelectorPolicy))
Swagger.property_type(::Type{ TrafficSelectorPolicy }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_TrafficSelectorPolicy[name]))}
Swagger.field_name(::Type{ TrafficSelectorPolicy }, property_name::Symbol) =  _property_map_TrafficSelectorPolicy[property_name]

function check_required(o::TrafficSelectorPolicy)
    (getproperty(o, Symbol("localAddressRanges")) === nothing) && (return false)
    (getproperty(o, Symbol("remoteAddressRanges")) === nothing) && (return false)
    true
end

function validate_property(::Type{ TrafficSelectorPolicy }, name::Symbol, val)
end
