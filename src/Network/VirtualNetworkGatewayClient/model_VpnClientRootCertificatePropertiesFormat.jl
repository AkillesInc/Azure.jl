# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.

type VpnClientRootCertificatePropertiesFormat <: SwaggerModel
    publicCertData::Nullable{ String } # publicCertData
    provisioningState::Nullable{ String } # provisioningState

    function VpnClientRootCertificatePropertiesFormat(;publicCertData=nothing, provisioningState=nothing)
        o = new()
        set_field!(o, :publicCertData, publicCertData)
        set_field!(o, :provisioningState, provisioningState)
        o
    end
end # type VpnClientRootCertificatePropertiesFormat

const _name_map_VpnClientRootCertificatePropertiesFormat = Dict{String,Symbol}(["publicCertData"=>:publicCertData, "provisioningState"=>:provisioningState])
const _field_map_VpnClientRootCertificatePropertiesFormat = Dict{Symbol,String}([:publicCertData=>"publicCertData", :provisioningState=>"provisioningState"])
Swagger.name_map(::Type{ VpnClientRootCertificatePropertiesFormat }) = _name_map_VpnClientRootCertificatePropertiesFormat
Swagger.field_map(::Type{ VpnClientRootCertificatePropertiesFormat }) = _field_map_VpnClientRootCertificatePropertiesFormat

function check_required(o::VpnClientRootCertificatePropertiesFormat)
    isnull(o.publicCertData) && (return false)
    true
end

function validate_field(o::VpnClientRootCertificatePropertiesFormat, name::Symbol, val)
end
