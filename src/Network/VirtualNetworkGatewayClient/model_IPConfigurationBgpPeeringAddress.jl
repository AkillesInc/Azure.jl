# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct IPConfigurationBgpPeeringAddress <: SwaggerModel
    ipconfigurationId::Any # spec type: Union{ Nothing, String } # spec name: ipconfigurationId
    defaultBgpIpAddresses::Any # spec type: Union{ Nothing, Vector{String} } # spec name: defaultBgpIpAddresses
    customBgpIpAddresses::Any # spec type: Union{ Nothing, Vector{String} } # spec name: customBgpIpAddresses
    tunnelIpAddresses::Any # spec type: Union{ Nothing, Vector{String} } # spec name: tunnelIpAddresses

    function IPConfigurationBgpPeeringAddress(;ipconfigurationId=nothing, defaultBgpIpAddresses=nothing, customBgpIpAddresses=nothing, tunnelIpAddresses=nothing)
        o = new()
        validate_property(IPConfigurationBgpPeeringAddress, Symbol("ipconfigurationId"), ipconfigurationId)
        setfield!(o, Symbol("ipconfigurationId"), ipconfigurationId)
        validate_property(IPConfigurationBgpPeeringAddress, Symbol("defaultBgpIpAddresses"), defaultBgpIpAddresses)
        setfield!(o, Symbol("defaultBgpIpAddresses"), defaultBgpIpAddresses)
        validate_property(IPConfigurationBgpPeeringAddress, Symbol("customBgpIpAddresses"), customBgpIpAddresses)
        setfield!(o, Symbol("customBgpIpAddresses"), customBgpIpAddresses)
        validate_property(IPConfigurationBgpPeeringAddress, Symbol("tunnelIpAddresses"), tunnelIpAddresses)
        setfield!(o, Symbol("tunnelIpAddresses"), tunnelIpAddresses)
        o
    end
end # type IPConfigurationBgpPeeringAddress

const _property_map_IPConfigurationBgpPeeringAddress = Dict{Symbol,Symbol}(Symbol("ipconfigurationId")=>Symbol("ipconfigurationId"), Symbol("defaultBgpIpAddresses")=>Symbol("defaultBgpIpAddresses"), Symbol("customBgpIpAddresses")=>Symbol("customBgpIpAddresses"), Symbol("tunnelIpAddresses")=>Symbol("tunnelIpAddresses"))
const _property_types_IPConfigurationBgpPeeringAddress = Dict{Symbol,String}(Symbol("ipconfigurationId")=>"String", Symbol("defaultBgpIpAddresses")=>"Vector{String}", Symbol("customBgpIpAddresses")=>"Vector{String}", Symbol("tunnelIpAddresses")=>"Vector{String}")
Base.propertynames(::Type{ IPConfigurationBgpPeeringAddress }) = collect(keys(_property_map_IPConfigurationBgpPeeringAddress))
Swagger.property_type(::Type{ IPConfigurationBgpPeeringAddress }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IPConfigurationBgpPeeringAddress[name]))}
Swagger.field_name(::Type{ IPConfigurationBgpPeeringAddress }, property_name::Symbol) =  _property_map_IPConfigurationBgpPeeringAddress[property_name]

function check_required(o::IPConfigurationBgpPeeringAddress)
    true
end

function validate_property(::Type{ IPConfigurationBgpPeeringAddress }, name::Symbol, val)
end
