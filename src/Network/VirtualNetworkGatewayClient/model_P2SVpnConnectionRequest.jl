# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct P2SVpnConnectionRequest <: SwaggerModel
    vpnConnectionIds::Any # spec type: Union{ Nothing, Vector{String} } # spec name: vpnConnectionIds

    function P2SVpnConnectionRequest(;vpnConnectionIds=nothing)
        o = new()
        validate_property(P2SVpnConnectionRequest, Symbol("vpnConnectionIds"), vpnConnectionIds)
        setfield!(o, Symbol("vpnConnectionIds"), vpnConnectionIds)
        o
    end
end # type P2SVpnConnectionRequest

const _property_map_P2SVpnConnectionRequest = Dict{Symbol,Symbol}(Symbol("vpnConnectionIds")=>Symbol("vpnConnectionIds"))
const _property_types_P2SVpnConnectionRequest = Dict{Symbol,String}(Symbol("vpnConnectionIds")=>"Vector{String}")
Base.propertynames(::Type{ P2SVpnConnectionRequest }) = collect(keys(_property_map_P2SVpnConnectionRequest))
Swagger.property_type(::Type{ P2SVpnConnectionRequest }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_P2SVpnConnectionRequest[name]))}
Swagger.field_name(::Type{ P2SVpnConnectionRequest }, property_name::Symbol) =  _property_map_P2SVpnConnectionRequest[property_name]

function check_required(o::P2SVpnConnectionRequest)
    true
end

function validate_property(::Type{ P2SVpnConnectionRequest }, name::Symbol, val)
end
