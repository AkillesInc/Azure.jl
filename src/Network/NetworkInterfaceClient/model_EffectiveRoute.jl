# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.

mutable struct EffectiveRoute <: SwaggerModel
    name::Union{ Nothing, String } # name
    source::Union{ Nothing, String } # source
    state::Union{ Nothing, String } # state
    addressPrefix::Union{ Nothing, Vector{String} } # addressPrefix
    nextHopIpAddress::Union{ Nothing, Vector{String} } # nextHopIpAddress
    nextHopType::Union{ Nothing, String } # nextHopType

    function EffectiveRoute(;name=nothing, source=nothing, state=nothing, addressPrefix=nothing, nextHopIpAddress=nothing, nextHopType=nothing)
        o = new()
        set_field!(o, :name, name)
        set_field!(o, :source, source)
        set_field!(o, :state, state)
        set_field!(o, :addressPrefix, addressPrefix)
        set_field!(o, :nextHopIpAddress, nextHopIpAddress)
        set_field!(o, :nextHopType, nextHopType)
        o
    end
end # type EffectiveRoute

const _name_map_EffectiveRoute = Dict{String,Symbol}(["name"=>:name, "source"=>:source, "state"=>:state, "addressPrefix"=>:addressPrefix, "nextHopIpAddress"=>:nextHopIpAddress, "nextHopType"=>:nextHopType])
const _field_map_EffectiveRoute = Dict{Symbol,String}([:name=>"name", :source=>"source", :state=>"state", :addressPrefix=>"addressPrefix", :nextHopIpAddress=>"nextHopIpAddress", :nextHopType=>"nextHopType"])
Swagger.name_map(::Type{ EffectiveRoute }) = _name_map_EffectiveRoute
Swagger.field_map(::Type{ EffectiveRoute }) = _field_map_EffectiveRoute

const _allowed_EffectiveRoute_source = ["Unknown", "User", "VirtualNetworkGateway", "Default"]

const _allowed_EffectiveRoute_state = ["Active", "Invalid"]

const _allowed_EffectiveRoute_nextHopType = ["VirtualNetworkGateway", "VnetLocal", "Internet", "VirtualAppliance", "None"]

function check_required(o::EffectiveRoute)
    true
end

function validate_field(o::EffectiveRoute, name::Symbol, val)
    if name === :source
        Swagger.validate_param(name, "EffectiveRoute", :enum, val, _allowed_EffectiveRoute_source)
    end
    if name === :state
        Swagger.validate_param(name, "EffectiveRoute", :enum, val, _allowed_EffectiveRoute_state)
    end
    if name === :nextHopType
        Swagger.validate_param(name, "EffectiveRoute", :enum, val, _allowed_EffectiveRoute_nextHopType)
    end
end
