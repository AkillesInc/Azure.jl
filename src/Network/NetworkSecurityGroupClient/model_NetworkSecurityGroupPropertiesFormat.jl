# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.

type NetworkSecurityGroupPropertiesFormat <: SwaggerModel
    securityRules::Nullable{ Vector{SecurityRule} } # securityRules
    defaultSecurityRules::Nullable{ Vector{SecurityRule} } # defaultSecurityRules
    networkInterfaces::Nullable{ Vector{NetworkInterface} } # networkInterfaces
    subnets::Nullable{ Vector{Subnet} } # subnets
    resourceGuid::Nullable{ String } # resourceGuid
    provisioningState::Nullable{ String } # provisioningState

    function NetworkSecurityGroupPropertiesFormat(;securityRules=nothing, defaultSecurityRules=nothing, networkInterfaces=nothing, subnets=nothing, resourceGuid=nothing, provisioningState=nothing)
        o = new()
        set_field!(o, :securityRules, securityRules)
        set_field!(o, :defaultSecurityRules, defaultSecurityRules)
        set_field!(o, :networkInterfaces, networkInterfaces)
        set_field!(o, :subnets, subnets)
        set_field!(o, :resourceGuid, resourceGuid)
        set_field!(o, :provisioningState, provisioningState)
        o
    end
end # type NetworkSecurityGroupPropertiesFormat

const _name_map_NetworkSecurityGroupPropertiesFormat = Dict{String,Symbol}(["securityRules"=>:securityRules, "defaultSecurityRules"=>:defaultSecurityRules, "networkInterfaces"=>:networkInterfaces, "subnets"=>:subnets, "resourceGuid"=>:resourceGuid, "provisioningState"=>:provisioningState])
const _field_map_NetworkSecurityGroupPropertiesFormat = Dict{Symbol,String}([:securityRules=>"securityRules", :defaultSecurityRules=>"defaultSecurityRules", :networkInterfaces=>"networkInterfaces", :subnets=>"subnets", :resourceGuid=>"resourceGuid", :provisioningState=>"provisioningState"])
Swagger.name_map(::Type{ NetworkSecurityGroupPropertiesFormat }) = _name_map_NetworkSecurityGroupPropertiesFormat
Swagger.field_map(::Type{ NetworkSecurityGroupPropertiesFormat }) = _field_map_NetworkSecurityGroupPropertiesFormat

function check_required(o::NetworkSecurityGroupPropertiesFormat)
    true
end

function validate_field(o::NetworkSecurityGroupPropertiesFormat, name::Symbol, val)
end
