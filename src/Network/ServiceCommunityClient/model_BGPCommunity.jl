# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.

mutable struct BGPCommunity <: SwaggerModel
    serviceSupportedRegion::Union{ Nothing, String } # serviceSupportedRegion
    communityName::Union{ Nothing, String } # communityName
    communityValue::Union{ Nothing, String } # communityValue
    communityPrefixes::Union{ Nothing, Vector{String} } # communityPrefixes

    function BGPCommunity(;serviceSupportedRegion=nothing, communityName=nothing, communityValue=nothing, communityPrefixes=nothing)
        o = new()
        set_field!(o, :serviceSupportedRegion, serviceSupportedRegion)
        set_field!(o, :communityName, communityName)
        set_field!(o, :communityValue, communityValue)
        set_field!(o, :communityPrefixes, communityPrefixes)
        o
    end
end # type BGPCommunity

const _name_map_BGPCommunity = Dict{String,Symbol}(["serviceSupportedRegion"=>:serviceSupportedRegion, "communityName"=>:communityName, "communityValue"=>:communityValue, "communityPrefixes"=>:communityPrefixes])
const _field_map_BGPCommunity = Dict{Symbol,String}([:serviceSupportedRegion=>"serviceSupportedRegion", :communityName=>"communityName", :communityValue=>"communityValue", :communityPrefixes=>"communityPrefixes"])
Swagger.name_map(::Type{ BGPCommunity }) = _name_map_BGPCommunity
Swagger.field_map(::Type{ BGPCommunity }) = _field_map_BGPCommunity

function check_required(o::BGPCommunity)
    true
end

function validate_field(o::BGPCommunity, name::Symbol, val)
end
