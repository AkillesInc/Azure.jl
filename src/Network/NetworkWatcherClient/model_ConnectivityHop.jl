# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.

mutable struct ConnectivityHop <: SwaggerModel
    _type::Union{ Nothing, String } # type
    id::Union{ Nothing, String } # id
    address::Union{ Nothing, String } # address
    resourceId::Union{ Nothing, String } # resourceId
    nextHopIds::Union{ Nothing, Vector{String} } # nextHopIds
    issues::Union{ Nothing, Vector{ConnectivityIssue} } # issues

    function ConnectivityHop(;_type=nothing, id=nothing, address=nothing, resourceId=nothing, nextHopIds=nothing, issues=nothing)
        o = new()
        set_field!(o, :_type, _type)
        set_field!(o, :id, id)
        set_field!(o, :address, address)
        set_field!(o, :resourceId, resourceId)
        set_field!(o, :nextHopIds, nextHopIds)
        set_field!(o, :issues, issues)
        o
    end
end # type ConnectivityHop

const _name_map_ConnectivityHop = Dict{String,Symbol}(["type"=>:_type, "id"=>:id, "address"=>:address, "resourceId"=>:resourceId, "nextHopIds"=>:nextHopIds, "issues"=>:issues])
const _field_map_ConnectivityHop = Dict{Symbol,String}([:_type=>"type", :id=>"id", :address=>"address", :resourceId=>"resourceId", :nextHopIds=>"nextHopIds", :issues=>"issues"])
Swagger.name_map(::Type{ ConnectivityHop }) = _name_map_ConnectivityHop
Swagger.field_map(::Type{ ConnectivityHop }) = _field_map_ConnectivityHop

function check_required(o::ConnectivityHop)
    true
end

function validate_field(o::ConnectivityHop, name::Symbol, val)
end
