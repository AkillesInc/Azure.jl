# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct AzureReachabilityReportLatencyInfo <: SwaggerModel
    timeStamp::Any # spec type: Union{ Nothing, DateTime } # spec name: timeStamp
    score::Any # spec type: Union{ Nothing, Int32 } # spec name: score

    function AzureReachabilityReportLatencyInfo(;timeStamp=nothing, score=nothing)
        o = new()
        validate_property(AzureReachabilityReportLatencyInfo, Symbol("timeStamp"), timeStamp)
        setfield!(o, Symbol("timeStamp"), timeStamp)
        validate_property(AzureReachabilityReportLatencyInfo, Symbol("score"), score)
        setfield!(o, Symbol("score"), score)
        o
    end
end # type AzureReachabilityReportLatencyInfo

const _property_map_AzureReachabilityReportLatencyInfo = Dict{Symbol,Symbol}(Symbol("timeStamp")=>Symbol("timeStamp"), Symbol("score")=>Symbol("score"))
const _property_types_AzureReachabilityReportLatencyInfo = Dict{Symbol,String}(Symbol("timeStamp")=>"DateTime", Symbol("score")=>"Int32")
Base.propertynames(::Type{ AzureReachabilityReportLatencyInfo }) = collect(keys(_property_map_AzureReachabilityReportLatencyInfo))
Swagger.property_type(::Type{ AzureReachabilityReportLatencyInfo }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_AzureReachabilityReportLatencyInfo[name]))}
Swagger.field_name(::Type{ AzureReachabilityReportLatencyInfo }, property_name::Symbol) =  _property_map_AzureReachabilityReportLatencyInfo[property_name]

function check_required(o::AzureReachabilityReportLatencyInfo)
    true
end

function validate_property(::Type{ AzureReachabilityReportLatencyInfo }, name::Symbol, val)
    if name === Symbol("score")
        Swagger.validate_param(name, "AzureReachabilityReportLatencyInfo", :maximum, val, 100, false)
        Swagger.validate_param(name, "AzureReachabilityReportLatencyInfo", :minimum, val, 1, false)
    end
end
