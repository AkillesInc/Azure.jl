# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.

mutable struct TopologyResource <: SwaggerModel
    name::Union{ Nothing, String } # name
    id::Union{ Nothing, String } # id
    location::Union{ Nothing, String } # location
    associations::Union{ Nothing, Vector{TopologyAssociation} } # associations

    function TopologyResource(;name=nothing, id=nothing, location=nothing, associations=nothing)
        o = new()
        set_field!(o, :name, name)
        set_field!(o, :id, id)
        set_field!(o, :location, location)
        set_field!(o, :associations, associations)
        o
    end
end # type TopologyResource

const _name_map_TopologyResource = Dict{String,Symbol}(["name"=>:name, "id"=>:id, "location"=>:location, "associations"=>:associations])
const _field_map_TopologyResource = Dict{Symbol,String}([:name=>"name", :id=>"id", :location=>"location", :associations=>"associations"])
Swagger.name_map(::Type{ TopologyResource }) = _name_map_TopologyResource
Swagger.field_map(::Type{ TopologyResource }) = _field_map_TopologyResource

function check_required(o::TopologyResource)
    true
end

function validate_field(o::TopologyResource, name::Symbol, val)
end
