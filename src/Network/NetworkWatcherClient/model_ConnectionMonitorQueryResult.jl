# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct ConnectionMonitorQueryResult <: SwaggerModel
    sourceStatus::Any # spec type: Union{ Nothing, String } # spec name: sourceStatus
    states::Any # spec type: Union{ Nothing, Vector{ConnectionStateSnapshot} } # spec name: states

    function ConnectionMonitorQueryResult(;sourceStatus=nothing, states=nothing)
        o = new()
        validate_property(ConnectionMonitorQueryResult, Symbol("sourceStatus"), sourceStatus)
        setfield!(o, Symbol("sourceStatus"), sourceStatus)
        validate_property(ConnectionMonitorQueryResult, Symbol("states"), states)
        setfield!(o, Symbol("states"), states)
        o
    end
end # type ConnectionMonitorQueryResult

const _property_map_ConnectionMonitorQueryResult = Dict{Symbol,Symbol}(Symbol("sourceStatus")=>Symbol("sourceStatus"), Symbol("states")=>Symbol("states"))
const _property_types_ConnectionMonitorQueryResult = Dict{Symbol,String}(Symbol("sourceStatus")=>"String", Symbol("states")=>"Vector{ConnectionStateSnapshot}")
Base.propertynames(::Type{ ConnectionMonitorQueryResult }) = collect(keys(_property_map_ConnectionMonitorQueryResult))
Swagger.property_type(::Type{ ConnectionMonitorQueryResult }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ConnectionMonitorQueryResult[name]))}
Swagger.field_name(::Type{ ConnectionMonitorQueryResult }, property_name::Symbol) =  _property_map_ConnectionMonitorQueryResult[property_name]

const _allowed_ConnectionMonitorQueryResult_sourceStatus = ["Unknown", "Active", "Inactive"]

function check_required(o::ConnectionMonitorQueryResult)
    true
end

function validate_property(::Type{ ConnectionMonitorQueryResult }, name::Symbol, val)
    if name === Symbol("sourceStatus")
        Swagger.validate_param(name, "ConnectionMonitorQueryResult", :enum, val, _allowed_ConnectionMonitorQueryResult_sourceStatus)
    end
end
