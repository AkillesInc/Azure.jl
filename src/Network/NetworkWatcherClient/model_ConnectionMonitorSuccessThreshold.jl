# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct ConnectionMonitorSuccessThreshold <: SwaggerModel
    checksFailedPercent::Any # spec type: Union{ Nothing, Int32 } # spec name: checksFailedPercent
    roundTripTimeMs::Any # spec type: Union{ Nothing, Float32 } # spec name: roundTripTimeMs

    function ConnectionMonitorSuccessThreshold(;checksFailedPercent=nothing, roundTripTimeMs=nothing)
        o = new()
        validate_property(ConnectionMonitorSuccessThreshold, Symbol("checksFailedPercent"), checksFailedPercent)
        setfield!(o, Symbol("checksFailedPercent"), checksFailedPercent)
        validate_property(ConnectionMonitorSuccessThreshold, Symbol("roundTripTimeMs"), roundTripTimeMs)
        setfield!(o, Symbol("roundTripTimeMs"), roundTripTimeMs)
        o
    end
end # type ConnectionMonitorSuccessThreshold

const _property_map_ConnectionMonitorSuccessThreshold = Dict{Symbol,Symbol}(Symbol("checksFailedPercent")=>Symbol("checksFailedPercent"), Symbol("roundTripTimeMs")=>Symbol("roundTripTimeMs"))
const _property_types_ConnectionMonitorSuccessThreshold = Dict{Symbol,String}(Symbol("checksFailedPercent")=>"Int32", Symbol("roundTripTimeMs")=>"Float32")
Base.propertynames(::Type{ ConnectionMonitorSuccessThreshold }) = collect(keys(_property_map_ConnectionMonitorSuccessThreshold))
Swagger.property_type(::Type{ ConnectionMonitorSuccessThreshold }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ConnectionMonitorSuccessThreshold[name]))}
Swagger.field_name(::Type{ ConnectionMonitorSuccessThreshold }, property_name::Symbol) =  _property_map_ConnectionMonitorSuccessThreshold[property_name]

function check_required(o::ConnectionMonitorSuccessThreshold)
    true
end

function validate_property(::Type{ ConnectionMonitorSuccessThreshold }, name::Symbol, val)
end
