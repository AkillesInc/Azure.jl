# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.

mutable struct TroubleshootingDetails <: SwaggerModel
    id::Union{ Nothing, String } # id
    reasonType::Union{ Nothing, String } # reasonType
    summary::Union{ Nothing, String } # summary
    detail::Union{ Nothing, String } # detail
    recommendedActions::Union{ Nothing, Vector{TroubleshootingRecommendedActions} } # recommendedActions

    function TroubleshootingDetails(;id=nothing, reasonType=nothing, summary=nothing, detail=nothing, recommendedActions=nothing)
        o = new()
        set_field!(o, :id, id)
        set_field!(o, :reasonType, reasonType)
        set_field!(o, :summary, summary)
        set_field!(o, :detail, detail)
        set_field!(o, :recommendedActions, recommendedActions)
        o
    end
end # type TroubleshootingDetails

const _name_map_TroubleshootingDetails = Dict{String,Symbol}(["id"=>:id, "reasonType"=>:reasonType, "summary"=>:summary, "detail"=>:detail, "recommendedActions"=>:recommendedActions])
const _field_map_TroubleshootingDetails = Dict{Symbol,String}([:id=>"id", :reasonType=>"reasonType", :summary=>"summary", :detail=>"detail", :recommendedActions=>"recommendedActions"])
Swagger.name_map(::Type{ TroubleshootingDetails }) = _name_map_TroubleshootingDetails
Swagger.field_map(::Type{ TroubleshootingDetails }) = _field_map_TroubleshootingDetails

function check_required(o::TroubleshootingDetails)
    true
end

function validate_field(o::TroubleshootingDetails, name::Symbol, val)
end
