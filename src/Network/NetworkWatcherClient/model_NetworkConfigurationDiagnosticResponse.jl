# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct NetworkConfigurationDiagnosticResponse <: SwaggerModel
    results::Any # spec type: Union{ Nothing, Vector{NetworkConfigurationDiagnosticResult} } # spec name: results

    function NetworkConfigurationDiagnosticResponse(;results=nothing)
        o = new()
        validate_property(NetworkConfigurationDiagnosticResponse, Symbol("results"), results)
        setfield!(o, Symbol("results"), results)
        o
    end
end # type NetworkConfigurationDiagnosticResponse

const _property_map_NetworkConfigurationDiagnosticResponse = Dict{Symbol,Symbol}(Symbol("results")=>Symbol("results"))
const _property_types_NetworkConfigurationDiagnosticResponse = Dict{Symbol,String}(Symbol("results")=>"Vector{NetworkConfigurationDiagnosticResult}")
Base.propertynames(::Type{ NetworkConfigurationDiagnosticResponse }) = collect(keys(_property_map_NetworkConfigurationDiagnosticResponse))
Swagger.property_type(::Type{ NetworkConfigurationDiagnosticResponse }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_NetworkConfigurationDiagnosticResponse[name]))}
Swagger.field_name(::Type{ NetworkConfigurationDiagnosticResponse }, property_name::Symbol) =  _property_map_NetworkConfigurationDiagnosticResponse[property_name]

function check_required(o::NetworkConfigurationDiagnosticResponse)
    true
end

function validate_property(::Type{ NetworkConfigurationDiagnosticResponse }, name::Symbol, val)
end
