# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct ProtocolConfiguration <: SwaggerModel
    HTTPConfiguration::Any # spec type: Union{ Nothing, HTTPConfiguration } # spec name: HTTPConfiguration

    function ProtocolConfiguration(;HTTPConfiguration=nothing)
        o = new()
        validate_property(ProtocolConfiguration, Symbol("HTTPConfiguration"), HTTPConfiguration)
        setfield!(o, Symbol("HTTPConfiguration"), HTTPConfiguration)
        o
    end
end # type ProtocolConfiguration

const _property_map_ProtocolConfiguration = Dict{Symbol,Symbol}(Symbol("HTTPConfiguration")=>Symbol("HTTPConfiguration"))
const _property_types_ProtocolConfiguration = Dict{Symbol,String}(Symbol("HTTPConfiguration")=>"HTTPConfiguration")
Base.propertynames(::Type{ ProtocolConfiguration }) = collect(keys(_property_map_ProtocolConfiguration))
Swagger.property_type(::Type{ ProtocolConfiguration }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ProtocolConfiguration[name]))}
Swagger.field_name(::Type{ ProtocolConfiguration }, property_name::Symbol) =  _property_map_ProtocolConfiguration[property_name]

function check_required(o::ProtocolConfiguration)
    true
end

function validate_property(::Type{ ProtocolConfiguration }, name::Symbol, val)
end
