# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.

type SecurityRuleAssociations <: SwaggerModel
    networkInterfaceAssociation::Nullable{ NetworkInterfaceAssociation } # networkInterfaceAssociation
    subnetAssociation::Nullable{ SubnetAssociation } # subnetAssociation
    defaultSecurityRules::Nullable{ Vector{SecurityRule} } # defaultSecurityRules
    effectiveSecurityRules::Nullable{ Vector{EffectiveNetworkSecurityRule} } # effectiveSecurityRules

    function SecurityRuleAssociations(;networkInterfaceAssociation=nothing, subnetAssociation=nothing, defaultSecurityRules=nothing, effectiveSecurityRules=nothing)
        o = new()
        set_field!(o, :networkInterfaceAssociation, networkInterfaceAssociation)
        set_field!(o, :subnetAssociation, subnetAssociation)
        set_field!(o, :defaultSecurityRules, defaultSecurityRules)
        set_field!(o, :effectiveSecurityRules, effectiveSecurityRules)
        o
    end
end # type SecurityRuleAssociations

const _name_map_SecurityRuleAssociations = Dict{String,Symbol}(["networkInterfaceAssociation"=>:networkInterfaceAssociation, "subnetAssociation"=>:subnetAssociation, "defaultSecurityRules"=>:defaultSecurityRules, "effectiveSecurityRules"=>:effectiveSecurityRules])
const _field_map_SecurityRuleAssociations = Dict{Symbol,String}([:networkInterfaceAssociation=>"networkInterfaceAssociation", :subnetAssociation=>"subnetAssociation", :defaultSecurityRules=>"defaultSecurityRules", :effectiveSecurityRules=>"effectiveSecurityRules"])
Swagger.name_map(::Type{ SecurityRuleAssociations }) = _name_map_SecurityRuleAssociations
Swagger.field_map(::Type{ SecurityRuleAssociations }) = _field_map_SecurityRuleAssociations

function check_required(o::SecurityRuleAssociations)
    true
end

function validate_field(o::SecurityRuleAssociations, name::Symbol, val)
end
