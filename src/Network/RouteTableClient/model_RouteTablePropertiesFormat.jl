# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.

mutable struct RouteTablePropertiesFormat <: SwaggerModel
    routes::Union{ Nothing, Vector{Route} } # routes
    subnets::Union{ Nothing, Vector{Subnet} } # subnets
    provisioningState::Union{ Nothing, String } # provisioningState

    function RouteTablePropertiesFormat(;routes=nothing, subnets=nothing, provisioningState=nothing)
        o = new()
        set_field!(o, :routes, routes)
        set_field!(o, :subnets, subnets)
        set_field!(o, :provisioningState, provisioningState)
        o
    end
end # type RouteTablePropertiesFormat

const _name_map_RouteTablePropertiesFormat = Dict{String,Symbol}(["routes"=>:routes, "subnets"=>:subnets, "provisioningState"=>:provisioningState])
const _field_map_RouteTablePropertiesFormat = Dict{Symbol,String}([:routes=>"routes", :subnets=>"subnets", :provisioningState=>"provisioningState"])
Swagger.name_map(::Type{ RouteTablePropertiesFormat }) = _name_map_RouteTablePropertiesFormat
Swagger.field_map(::Type{ RouteTablePropertiesFormat }) = _field_map_RouteTablePropertiesFormat

function check_required(o::RouteTablePropertiesFormat)
    true
end

function validate_field(o::RouteTablePropertiesFormat, name::Symbol, val)
end
