# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.

type RouteFilterPropertiesFormat <: SwaggerModel
    rules::Nullable{ Vector{RouteFilterRule} } # rules
    peerings::Nullable{ Vector{ExpressRouteCircuitPeering} } # peerings
    provisioningState::Nullable{ String } # provisioningState

    function RouteFilterPropertiesFormat(;rules=nothing, peerings=nothing, provisioningState=nothing)
        o = new()
        set_field!(o, :rules, rules)
        set_field!(o, :peerings, peerings)
        set_field!(o, :provisioningState, provisioningState)
        o
    end
end # type RouteFilterPropertiesFormat

const _name_map_RouteFilterPropertiesFormat = Dict{String,Symbol}(["rules"=>:rules, "peerings"=>:peerings, "provisioningState"=>:provisioningState])
const _field_map_RouteFilterPropertiesFormat = Dict{Symbol,String}([:rules=>"rules", :peerings=>"peerings", :provisioningState=>"provisioningState"])
Swagger.name_map(::Type{ RouteFilterPropertiesFormat }) = _name_map_RouteFilterPropertiesFormat
Swagger.field_map(::Type{ RouteFilterPropertiesFormat }) = _field_map_RouteFilterPropertiesFormat

function check_required(o::RouteFilterPropertiesFormat)
    true
end

function validate_field(o::RouteFilterPropertiesFormat, name::Symbol, val)
end
