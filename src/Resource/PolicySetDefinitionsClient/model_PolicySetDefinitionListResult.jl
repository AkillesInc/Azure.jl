# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct PolicySetDefinitionListResult <: SwaggerModel
    value::Any # spec type: Union{ Nothing, Vector{PolicySetDefinition} } # spec name: value
    nextLink::Any # spec type: Union{ Nothing, String } # spec name: nextLink

    function PolicySetDefinitionListResult(;value=nothing, nextLink=nothing)
        o = new()
        validate_property(PolicySetDefinitionListResult, Symbol("value"), value)
        setfield!(o, Symbol("value"), value)
        validate_property(PolicySetDefinitionListResult, Symbol("nextLink"), nextLink)
        setfield!(o, Symbol("nextLink"), nextLink)
        o
    end
end # type PolicySetDefinitionListResult

const _property_map_PolicySetDefinitionListResult = Dict{Symbol,Symbol}(Symbol("value")=>Symbol("value"), Symbol("nextLink")=>Symbol("nextLink"))
const _property_types_PolicySetDefinitionListResult = Dict{Symbol,String}(Symbol("value")=>"Vector{PolicySetDefinition}", Symbol("nextLink")=>"String")
Base.propertynames(::Type{ PolicySetDefinitionListResult }) = collect(keys(_property_map_PolicySetDefinitionListResult))
Swagger.property_type(::Type{ PolicySetDefinitionListResult }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_PolicySetDefinitionListResult[name]))}
Swagger.field_name(::Type{ PolicySetDefinitionListResult }, property_name::Symbol) =  _property_map_PolicySetDefinitionListResult[property_name]

function check_required(o::PolicySetDefinitionListResult)
    true
end

function validate_property(::Type{ PolicySetDefinitionListResult }, name::Symbol, val)
end
