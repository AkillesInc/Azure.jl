# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct PolicyDefinitionGroup <: SwaggerModel
    name::Any # spec type: Union{ Nothing, String } # spec name: name
    displayName::Any # spec type: Union{ Nothing, String } # spec name: displayName
    category::Any # spec type: Union{ Nothing, String } # spec name: category
    description::Any # spec type: Union{ Nothing, String } # spec name: description
    additionalMetadataId::Any # spec type: Union{ Nothing, String } # spec name: additionalMetadataId

    function PolicyDefinitionGroup(;name=nothing, displayName=nothing, category=nothing, description=nothing, additionalMetadataId=nothing)
        o = new()
        validate_property(PolicyDefinitionGroup, Symbol("name"), name)
        setfield!(o, Symbol("name"), name)
        validate_property(PolicyDefinitionGroup, Symbol("displayName"), displayName)
        setfield!(o, Symbol("displayName"), displayName)
        validate_property(PolicyDefinitionGroup, Symbol("category"), category)
        setfield!(o, Symbol("category"), category)
        validate_property(PolicyDefinitionGroup, Symbol("description"), description)
        setfield!(o, Symbol("description"), description)
        validate_property(PolicyDefinitionGroup, Symbol("additionalMetadataId"), additionalMetadataId)
        setfield!(o, Symbol("additionalMetadataId"), additionalMetadataId)
        o
    end
end # type PolicyDefinitionGroup

const _property_map_PolicyDefinitionGroup = Dict{Symbol,Symbol}(Symbol("name")=>Symbol("name"), Symbol("displayName")=>Symbol("displayName"), Symbol("category")=>Symbol("category"), Symbol("description")=>Symbol("description"), Symbol("additionalMetadataId")=>Symbol("additionalMetadataId"))
const _property_types_PolicyDefinitionGroup = Dict{Symbol,String}(Symbol("name")=>"String", Symbol("displayName")=>"String", Symbol("category")=>"String", Symbol("description")=>"String", Symbol("additionalMetadataId")=>"String")
Base.propertynames(::Type{ PolicyDefinitionGroup }) = collect(keys(_property_map_PolicyDefinitionGroup))
Swagger.property_type(::Type{ PolicyDefinitionGroup }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_PolicyDefinitionGroup[name]))}
Swagger.field_name(::Type{ PolicyDefinitionGroup }, property_name::Symbol) =  _property_map_PolicyDefinitionGroup[property_name]

function check_required(o::PolicyDefinitionGroup)
    (getproperty(o, Symbol("name")) === nothing) && (return false)
    true
end

function validate_property(::Type{ PolicyDefinitionGroup }, name::Symbol, val)
end
