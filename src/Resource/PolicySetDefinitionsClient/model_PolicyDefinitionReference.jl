# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct PolicyDefinitionReference <: SwaggerModel
    policyDefinitionId::Any # spec type: Union{ Nothing, String } # spec name: policyDefinitionId
    parameters::Any # spec type: Union{ Nothing, ParameterValues } # spec name: parameters
    policyDefinitionReferenceId::Any # spec type: Union{ Nothing, String } # spec name: policyDefinitionReferenceId
    groupNames::Any # spec type: Union{ Nothing, Vector{String} } # spec name: groupNames

    function PolicyDefinitionReference(;policyDefinitionId=nothing, parameters=nothing, policyDefinitionReferenceId=nothing, groupNames=nothing)
        o = new()
        validate_property(PolicyDefinitionReference, Symbol("policyDefinitionId"), policyDefinitionId)
        setfield!(o, Symbol("policyDefinitionId"), policyDefinitionId)
        validate_property(PolicyDefinitionReference, Symbol("parameters"), parameters)
        setfield!(o, Symbol("parameters"), parameters)
        validate_property(PolicyDefinitionReference, Symbol("policyDefinitionReferenceId"), policyDefinitionReferenceId)
        setfield!(o, Symbol("policyDefinitionReferenceId"), policyDefinitionReferenceId)
        validate_property(PolicyDefinitionReference, Symbol("groupNames"), groupNames)
        setfield!(o, Symbol("groupNames"), groupNames)
        o
    end
end # type PolicyDefinitionReference

const _property_map_PolicyDefinitionReference = Dict{Symbol,Symbol}(Symbol("policyDefinitionId")=>Symbol("policyDefinitionId"), Symbol("parameters")=>Symbol("parameters"), Symbol("policyDefinitionReferenceId")=>Symbol("policyDefinitionReferenceId"), Symbol("groupNames")=>Symbol("groupNames"))
const _property_types_PolicyDefinitionReference = Dict{Symbol,String}(Symbol("policyDefinitionId")=>"String", Symbol("parameters")=>"ParameterValues", Symbol("policyDefinitionReferenceId")=>"String", Symbol("groupNames")=>"Vector{String}")
Base.propertynames(::Type{ PolicyDefinitionReference }) = collect(keys(_property_map_PolicyDefinitionReference))
Swagger.property_type(::Type{ PolicyDefinitionReference }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_PolicyDefinitionReference[name]))}
Swagger.field_name(::Type{ PolicyDefinitionReference }, property_name::Symbol) =  _property_map_PolicyDefinitionReference[property_name]

function check_required(o::PolicyDefinitionReference)
    (getproperty(o, Symbol("policyDefinitionId")) === nothing) && (return false)
    true
end

function validate_property(::Type{ PolicyDefinitionReference }, name::Symbol, val)
end
