# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.

mutable struct SubscriptionPolicies <: SwaggerModel
    locationPlacementId::Union{ Nothing, String } # locationPlacementId
    quotaId::Union{ Nothing, String } # quotaId
    spendingLimit::Union{ Nothing, String } # spendingLimit

    function SubscriptionPolicies(;locationPlacementId=nothing, quotaId=nothing, spendingLimit=nothing)
        o = new()
        set_field!(o, :locationPlacementId, locationPlacementId)
        set_field!(o, :quotaId, quotaId)
        set_field!(o, :spendingLimit, spendingLimit)
        o
    end
end # type SubscriptionPolicies

const _name_map_SubscriptionPolicies = Dict{String,Symbol}(["locationPlacementId"=>:locationPlacementId, "quotaId"=>:quotaId, "spendingLimit"=>:spendingLimit])
const _field_map_SubscriptionPolicies = Dict{Symbol,String}([:locationPlacementId=>"locationPlacementId", :quotaId=>"quotaId", :spendingLimit=>"spendingLimit"])
Swagger.name_map(::Type{ SubscriptionPolicies }) = _name_map_SubscriptionPolicies
Swagger.field_map(::Type{ SubscriptionPolicies }) = _field_map_SubscriptionPolicies

const _allowed_SubscriptionPolicies_spendingLimit = ["On", "Off", "CurrentPeriodOff"]

function check_required(o::SubscriptionPolicies)
    true
end

function validate_field(o::SubscriptionPolicies, name::Symbol, val)
    if name === :spendingLimit
        Swagger.validate_param(name, "SubscriptionPolicies", :enum, val, _allowed_SubscriptionPolicies_spendingLimit)
    end
end
