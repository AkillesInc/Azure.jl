# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.

mutable struct DeploymentProperties <: SwaggerModel
    template::Union{ Nothing, Any } # template
    templateLink::Union{ Nothing, TemplateLink } # templateLink
    parameters::Union{ Nothing, Any } # parameters
    parametersLink::Union{ Nothing, ParametersLink } # parametersLink
    mode::Union{ Nothing, String } # mode
    debugSetting::Union{ Nothing, DebugSetting } # debugSetting

    function DeploymentProperties(;template=nothing, templateLink=nothing, parameters=nothing, parametersLink=nothing, mode=nothing, debugSetting=nothing)
        o = new()
        set_field!(o, :template, template)
        set_field!(o, :templateLink, templateLink)
        set_field!(o, :parameters, parameters)
        set_field!(o, :parametersLink, parametersLink)
        set_field!(o, :mode, mode)
        set_field!(o, :debugSetting, debugSetting)
        o
    end
end # type DeploymentProperties

const _name_map_DeploymentProperties = Dict{String,Symbol}(["template"=>:template, "templateLink"=>:templateLink, "parameters"=>:parameters, "parametersLink"=>:parametersLink, "mode"=>:mode, "debugSetting"=>:debugSetting])
const _field_map_DeploymentProperties = Dict{Symbol,String}([:template=>"template", :templateLink=>"templateLink", :parameters=>"parameters", :parametersLink=>"parametersLink", :mode=>"mode", :debugSetting=>"debugSetting"])
Swagger.name_map(::Type{ DeploymentProperties }) = _name_map_DeploymentProperties
Swagger.field_map(::Type{ DeploymentProperties }) = _field_map_DeploymentProperties

const _allowed_DeploymentProperties_mode = ["Incremental", "Complete"]

function check_required(o::DeploymentProperties)
    true
end

function validate_field(o::DeploymentProperties, name::Symbol, val)
    if name === :mode
        Swagger.validate_param(name, "DeploymentProperties", :enum, val, _allowed_DeploymentProperties_mode)
    end
end
