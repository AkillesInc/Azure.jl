# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.

mutable struct Provider <: SwaggerModel
    id::Union{ Nothing, String } # id
    namespace::Union{ Nothing, String } # namespace
    registrationState::Union{ Nothing, String } # registrationState
    resourceTypes::Union{ Nothing, Vector{ProviderResourceType} } # resourceTypes

    function Provider(;id=nothing, namespace=nothing, registrationState=nothing, resourceTypes=nothing)
        o = new()
        set_field!(o, :id, id)
        set_field!(o, :namespace, namespace)
        set_field!(o, :registrationState, registrationState)
        set_field!(o, :resourceTypes, resourceTypes)
        o
    end
end # type Provider

const _name_map_Provider = Dict{String,Symbol}(["id"=>:id, "namespace"=>:namespace, "registrationState"=>:registrationState, "resourceTypes"=>:resourceTypes])
const _field_map_Provider = Dict{Symbol,String}([:id=>"id", :namespace=>"namespace", :registrationState=>"registrationState", :resourceTypes=>"resourceTypes"])
Swagger.name_map(::Type{ Provider }) = _name_map_Provider
Swagger.field_map(::Type{ Provider }) = _field_map_Provider

function check_required(o::Provider)
    true
end

function validate_field(o::Provider, name::Symbol, val)
end
