# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct IdentityUserAssignedIdentities <: SwaggerModel
    principalId::Any # spec type: Union{ Nothing, String } # spec name: principalId
    clientId::Any # spec type: Union{ Nothing, String } # spec name: clientId

    function IdentityUserAssignedIdentities(;principalId=nothing, clientId=nothing)
        o = new()
        validate_property(IdentityUserAssignedIdentities, Symbol("principalId"), principalId)
        setfield!(o, Symbol("principalId"), principalId)
        validate_property(IdentityUserAssignedIdentities, Symbol("clientId"), clientId)
        setfield!(o, Symbol("clientId"), clientId)
        o
    end
end # type IdentityUserAssignedIdentities

const _property_map_IdentityUserAssignedIdentities = Dict{Symbol,Symbol}(Symbol("principalId")=>Symbol("principalId"), Symbol("clientId")=>Symbol("clientId"))
const _property_types_IdentityUserAssignedIdentities = Dict{Symbol,String}(Symbol("principalId")=>"String", Symbol("clientId")=>"String")
Base.propertynames(::Type{ IdentityUserAssignedIdentities }) = collect(keys(_property_map_IdentityUserAssignedIdentities))
Swagger.property_type(::Type{ IdentityUserAssignedIdentities }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IdentityUserAssignedIdentities[name]))}
Swagger.field_name(::Type{ IdentityUserAssignedIdentities }, property_name::Symbol) =  _property_map_IdentityUserAssignedIdentities[property_name]

function check_required(o::IdentityUserAssignedIdentities)
    true
end

function validate_property(::Type{ IdentityUserAssignedIdentities }, name::Symbol, val)
end
