# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct WhatIfOperationResult <: SwaggerModel
    status::Any # spec type: Union{ Nothing, String } # spec name: status
    properties::Any # spec type: Union{ Nothing, WhatIfOperationProperties } # spec name: properties
    error::Any # spec type: Union{ Nothing, ErrorResponse } # spec name: error

    function WhatIfOperationResult(;status=nothing, properties=nothing, error=nothing)
        o = new()
        validate_property(WhatIfOperationResult, Symbol("status"), status)
        setfield!(o, Symbol("status"), status)
        validate_property(WhatIfOperationResult, Symbol("properties"), properties)
        setfield!(o, Symbol("properties"), properties)
        validate_property(WhatIfOperationResult, Symbol("error"), error)
        setfield!(o, Symbol("error"), error)
        o
    end
end # type WhatIfOperationResult

const _property_map_WhatIfOperationResult = Dict{Symbol,Symbol}(Symbol("status")=>Symbol("status"), Symbol("properties")=>Symbol("properties"), Symbol("error")=>Symbol("error"))
const _property_types_WhatIfOperationResult = Dict{Symbol,String}(Symbol("status")=>"String", Symbol("properties")=>"WhatIfOperationProperties", Symbol("error")=>"ErrorResponse")
Base.propertynames(::Type{ WhatIfOperationResult }) = collect(keys(_property_map_WhatIfOperationResult))
Swagger.property_type(::Type{ WhatIfOperationResult }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_WhatIfOperationResult[name]))}
Swagger.field_name(::Type{ WhatIfOperationResult }, property_name::Symbol) =  _property_map_WhatIfOperationResult[property_name]

function check_required(o::WhatIfOperationResult)
    true
end

function validate_property(::Type{ WhatIfOperationResult }, name::Symbol, val)
end
