# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct VirtualMachineExtensionUpdate <: SwaggerModel
    tags::Any # spec type: Union{ Nothing, Dict{String, String} } # spec name: tags

    function VirtualMachineExtensionUpdate(;tags=nothing)
        o = new()
        validate_property(VirtualMachineExtensionUpdate, Symbol("tags"), tags)
        setfield!(o, Symbol("tags"), tags)
        o
    end
end # type VirtualMachineExtensionUpdate

const _property_map_VirtualMachineExtensionUpdate = Dict{Symbol,Symbol}(Symbol("tags")=>Symbol("tags"))
const _property_types_VirtualMachineExtensionUpdate = Dict{Symbol,String}(Symbol("tags")=>"Dict{String, String}")
Base.propertynames(::Type{ VirtualMachineExtensionUpdate }) = collect(keys(_property_map_VirtualMachineExtensionUpdate))
Swagger.property_type(::Type{ VirtualMachineExtensionUpdate }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_VirtualMachineExtensionUpdate[name]))}
Swagger.field_name(::Type{ VirtualMachineExtensionUpdate }, property_name::Symbol) =  _property_map_VirtualMachineExtensionUpdate[property_name]

function check_required(o::VirtualMachineExtensionUpdate)
    true
end

function validate_property(::Type{ VirtualMachineExtensionUpdate }, name::Symbol, val)
end
