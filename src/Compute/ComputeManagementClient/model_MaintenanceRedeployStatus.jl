# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.

type MaintenanceRedeployStatus <: SwaggerModel
    isCustomerInitiatedMaintenanceAllowed::Nullable{ Bool } # isCustomerInitiatedMaintenanceAllowed
    preMaintenanceWindowStartTime::Nullable{ DateTime } # preMaintenanceWindowStartTime
    preMaintenanceWindowEndTime::Nullable{ DateTime } # preMaintenanceWindowEndTime
    maintenanceWindowStartTime::Nullable{ DateTime } # maintenanceWindowStartTime
    maintenanceWindowEndTime::Nullable{ DateTime } # maintenanceWindowEndTime
    lastOperationResultCode::Nullable{ String } # lastOperationResultCode
    lastOperationMessage::Nullable{ String } # lastOperationMessage

    function MaintenanceRedeployStatus(;isCustomerInitiatedMaintenanceAllowed=nothing, preMaintenanceWindowStartTime=nothing, preMaintenanceWindowEndTime=nothing, maintenanceWindowStartTime=nothing, maintenanceWindowEndTime=nothing, lastOperationResultCode=nothing, lastOperationMessage=nothing)
        o = new()
        set_field!(o, :isCustomerInitiatedMaintenanceAllowed, isCustomerInitiatedMaintenanceAllowed)
        set_field!(o, :preMaintenanceWindowStartTime, preMaintenanceWindowStartTime)
        set_field!(o, :preMaintenanceWindowEndTime, preMaintenanceWindowEndTime)
        set_field!(o, :maintenanceWindowStartTime, maintenanceWindowStartTime)
        set_field!(o, :maintenanceWindowEndTime, maintenanceWindowEndTime)
        set_field!(o, :lastOperationResultCode, lastOperationResultCode)
        set_field!(o, :lastOperationMessage, lastOperationMessage)
        o
    end
end # type MaintenanceRedeployStatus

const _name_map_MaintenanceRedeployStatus = Dict{String,Symbol}(["isCustomerInitiatedMaintenanceAllowed"=>:isCustomerInitiatedMaintenanceAllowed, "preMaintenanceWindowStartTime"=>:preMaintenanceWindowStartTime, "preMaintenanceWindowEndTime"=>:preMaintenanceWindowEndTime, "maintenanceWindowStartTime"=>:maintenanceWindowStartTime, "maintenanceWindowEndTime"=>:maintenanceWindowEndTime, "lastOperationResultCode"=>:lastOperationResultCode, "lastOperationMessage"=>:lastOperationMessage])
const _field_map_MaintenanceRedeployStatus = Dict{Symbol,String}([:isCustomerInitiatedMaintenanceAllowed=>"isCustomerInitiatedMaintenanceAllowed", :preMaintenanceWindowStartTime=>"preMaintenanceWindowStartTime", :preMaintenanceWindowEndTime=>"preMaintenanceWindowEndTime", :maintenanceWindowStartTime=>"maintenanceWindowStartTime", :maintenanceWindowEndTime=>"maintenanceWindowEndTime", :lastOperationResultCode=>"lastOperationResultCode", :lastOperationMessage=>"lastOperationMessage"])
Swagger.name_map(::Type{ MaintenanceRedeployStatus }) = _name_map_MaintenanceRedeployStatus
Swagger.field_map(::Type{ MaintenanceRedeployStatus }) = _field_map_MaintenanceRedeployStatus

const _allowed_MaintenanceRedeployStatus_lastOperationResultCode = ["None", "RetryLater", "MaintenanceAborted", "MaintenanceCompleted"]

function check_required(o::MaintenanceRedeployStatus)
    true
end

function validate_field(o::MaintenanceRedeployStatus, name::Symbol, val)
    if name === :lastOperationResultCode
        Swagger.validate_param(name, "MaintenanceRedeployStatus", :enum, val, _allowed_MaintenanceRedeployStatus_lastOperationResultCode)
    end
end
