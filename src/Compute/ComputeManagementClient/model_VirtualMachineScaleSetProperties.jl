# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.

type VirtualMachineScaleSetProperties <: SwaggerModel
    upgradePolicy::Nullable{ UpgradePolicy } # upgradePolicy
    virtualMachineProfile::Nullable{ VirtualMachineScaleSetVMProfile } # virtualMachineProfile
    provisioningState::Nullable{ String } # provisioningState
    overprovision::Nullable{ Bool } # overprovision
    uniqueId::Nullable{ String } # uniqueId
    singlePlacementGroup::Nullable{ Bool } # singlePlacementGroup

    function VirtualMachineScaleSetProperties(;upgradePolicy=nothing, virtualMachineProfile=nothing, provisioningState=nothing, overprovision=nothing, uniqueId=nothing, singlePlacementGroup=nothing)
        o = new()
        set_field!(o, :upgradePolicy, upgradePolicy)
        set_field!(o, :virtualMachineProfile, virtualMachineProfile)
        set_field!(o, :provisioningState, provisioningState)
        set_field!(o, :overprovision, overprovision)
        set_field!(o, :uniqueId, uniqueId)
        set_field!(o, :singlePlacementGroup, singlePlacementGroup)
        o
    end
end # type VirtualMachineScaleSetProperties

const _name_map_VirtualMachineScaleSetProperties = Dict{String,Symbol}(["upgradePolicy"=>:upgradePolicy, "virtualMachineProfile"=>:virtualMachineProfile, "provisioningState"=>:provisioningState, "overprovision"=>:overprovision, "uniqueId"=>:uniqueId, "singlePlacementGroup"=>:singlePlacementGroup])
const _field_map_VirtualMachineScaleSetProperties = Dict{Symbol,String}([:upgradePolicy=>"upgradePolicy", :virtualMachineProfile=>"virtualMachineProfile", :provisioningState=>"provisioningState", :overprovision=>"overprovision", :uniqueId=>"uniqueId", :singlePlacementGroup=>"singlePlacementGroup"])
Swagger.name_map(::Type{ VirtualMachineScaleSetProperties }) = _name_map_VirtualMachineScaleSetProperties
Swagger.field_map(::Type{ VirtualMachineScaleSetProperties }) = _field_map_VirtualMachineScaleSetProperties

function check_required(o::VirtualMachineScaleSetProperties)
    true
end

function validate_field(o::VirtualMachineScaleSetProperties, name::Symbol, val)
end
