# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct DiffDiskSettings <: SwaggerModel
    option::Any # spec type: Union{ Nothing, DiffDiskOption } # spec name: option
    placement::Any # spec type: Union{ Nothing, DiffDiskPlacement } # spec name: placement

    function DiffDiskSettings(;option=nothing, placement=nothing)
        o = new()
        validate_property(DiffDiskSettings, Symbol("option"), option)
        setfield!(o, Symbol("option"), option)
        validate_property(DiffDiskSettings, Symbol("placement"), placement)
        setfield!(o, Symbol("placement"), placement)
        o
    end
end # type DiffDiskSettings

const _property_map_DiffDiskSettings = Dict{Symbol,Symbol}(Symbol("option")=>Symbol("option"), Symbol("placement")=>Symbol("placement"))
const _property_types_DiffDiskSettings = Dict{Symbol,String}(Symbol("option")=>"DiffDiskOption", Symbol("placement")=>"DiffDiskPlacement")
Base.propertynames(::Type{ DiffDiskSettings }) = collect(keys(_property_map_DiffDiskSettings))
Swagger.property_type(::Type{ DiffDiskSettings }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_DiffDiskSettings[name]))}
Swagger.field_name(::Type{ DiffDiskSettings }, property_name::Symbol) =  _property_map_DiffDiskSettings[property_name]

function check_required(o::DiffDiskSettings)
    true
end

function validate_property(::Type{ DiffDiskSettings }, name::Symbol, val)
end
