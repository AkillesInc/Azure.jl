# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct AutomaticRepairsPolicy <: SwaggerModel
    enabled::Any # spec type: Union{ Nothing, Bool } # spec name: enabled
    gracePeriod::Any # spec type: Union{ Nothing, String } # spec name: gracePeriod

    function AutomaticRepairsPolicy(;enabled=nothing, gracePeriod=nothing)
        o = new()
        validate_property(AutomaticRepairsPolicy, Symbol("enabled"), enabled)
        setfield!(o, Symbol("enabled"), enabled)
        validate_property(AutomaticRepairsPolicy, Symbol("gracePeriod"), gracePeriod)
        setfield!(o, Symbol("gracePeriod"), gracePeriod)
        o
    end
end # type AutomaticRepairsPolicy

const _property_map_AutomaticRepairsPolicy = Dict{Symbol,Symbol}(Symbol("enabled")=>Symbol("enabled"), Symbol("gracePeriod")=>Symbol("gracePeriod"))
const _property_types_AutomaticRepairsPolicy = Dict{Symbol,String}(Symbol("enabled")=>"Bool", Symbol("gracePeriod")=>"String")
Base.propertynames(::Type{ AutomaticRepairsPolicy }) = collect(keys(_property_map_AutomaticRepairsPolicy))
Swagger.property_type(::Type{ AutomaticRepairsPolicy }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_AutomaticRepairsPolicy[name]))}
Swagger.field_name(::Type{ AutomaticRepairsPolicy }, property_name::Symbol) =  _property_map_AutomaticRepairsPolicy[property_name]

function check_required(o::AutomaticRepairsPolicy)
    true
end

function validate_property(::Type{ AutomaticRepairsPolicy }, name::Symbol, val)
end
