# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct VirtualMachineImageProperties <: SwaggerModel
    plan::Any # spec type: Union{ Nothing, PurchasePlan } # spec name: plan
    osDiskImage::Any # spec type: Union{ Nothing, OSDiskImage } # spec name: osDiskImage
    dataDiskImages::Any # spec type: Union{ Nothing, Vector{DataDiskImage} } # spec name: dataDiskImages
    automaticOSUpgradeProperties::Any # spec type: Union{ Nothing, AutomaticOSUpgradeProperties } # spec name: automaticOSUpgradeProperties
    hyperVGeneration::Any # spec type: Union{ Nothing, HyperVGenerationType } # spec name: hyperVGeneration
    disallowed::Any # spec type: Union{ Nothing, DisallowedConfiguration } # spec name: disallowed

    function VirtualMachineImageProperties(;plan=nothing, osDiskImage=nothing, dataDiskImages=nothing, automaticOSUpgradeProperties=nothing, hyperVGeneration=nothing, disallowed=nothing)
        o = new()
        validate_property(VirtualMachineImageProperties, Symbol("plan"), plan)
        setfield!(o, Symbol("plan"), plan)
        validate_property(VirtualMachineImageProperties, Symbol("osDiskImage"), osDiskImage)
        setfield!(o, Symbol("osDiskImage"), osDiskImage)
        validate_property(VirtualMachineImageProperties, Symbol("dataDiskImages"), dataDiskImages)
        setfield!(o, Symbol("dataDiskImages"), dataDiskImages)
        validate_property(VirtualMachineImageProperties, Symbol("automaticOSUpgradeProperties"), automaticOSUpgradeProperties)
        setfield!(o, Symbol("automaticOSUpgradeProperties"), automaticOSUpgradeProperties)
        validate_property(VirtualMachineImageProperties, Symbol("hyperVGeneration"), hyperVGeneration)
        setfield!(o, Symbol("hyperVGeneration"), hyperVGeneration)
        validate_property(VirtualMachineImageProperties, Symbol("disallowed"), disallowed)
        setfield!(o, Symbol("disallowed"), disallowed)
        o
    end
end # type VirtualMachineImageProperties

const _property_map_VirtualMachineImageProperties = Dict{Symbol,Symbol}(Symbol("plan")=>Symbol("plan"), Symbol("osDiskImage")=>Symbol("osDiskImage"), Symbol("dataDiskImages")=>Symbol("dataDiskImages"), Symbol("automaticOSUpgradeProperties")=>Symbol("automaticOSUpgradeProperties"), Symbol("hyperVGeneration")=>Symbol("hyperVGeneration"), Symbol("disallowed")=>Symbol("disallowed"))
const _property_types_VirtualMachineImageProperties = Dict{Symbol,String}(Symbol("plan")=>"PurchasePlan", Symbol("osDiskImage")=>"OSDiskImage", Symbol("dataDiskImages")=>"Vector{DataDiskImage}", Symbol("automaticOSUpgradeProperties")=>"AutomaticOSUpgradeProperties", Symbol("hyperVGeneration")=>"HyperVGenerationType", Symbol("disallowed")=>"DisallowedConfiguration")
Base.propertynames(::Type{ VirtualMachineImageProperties }) = collect(keys(_property_map_VirtualMachineImageProperties))
Swagger.property_type(::Type{ VirtualMachineImageProperties }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_VirtualMachineImageProperties[name]))}
Swagger.field_name(::Type{ VirtualMachineImageProperties }, property_name::Symbol) =  _property_map_VirtualMachineImageProperties[property_name]

function check_required(o::VirtualMachineImageProperties)
    true
end

function validate_property(::Type{ VirtualMachineImageProperties }, name::Symbol, val)
end
