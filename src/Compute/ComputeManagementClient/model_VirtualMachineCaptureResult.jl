# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct VirtualMachineCaptureResult <: SwaggerModel
    id::Any # spec type: Union{ Nothing, String } # spec name: id
    schema::Any # spec type: Union{ Nothing, String } # spec name: \$schema
    contentVersion::Any # spec type: Union{ Nothing, String } # spec name: contentVersion
    parameters::Any # spec type: Union{ Nothing, Any } # spec name: parameters
    resources::Any # spec type: Union{ Nothing, Vector{Any} } # spec name: resources

    function VirtualMachineCaptureResult(;id=nothing, schema=nothing, contentVersion=nothing, parameters=nothing, resources=nothing)
        o = new()
        validate_property(VirtualMachineCaptureResult, Symbol("id"), id)
        setfield!(o, Symbol("id"), id)
        validate_property(VirtualMachineCaptureResult, Symbol("\$schema"), schema)
        setfield!(o, Symbol("schema"), schema)
        validate_property(VirtualMachineCaptureResult, Symbol("contentVersion"), contentVersion)
        setfield!(o, Symbol("contentVersion"), contentVersion)
        validate_property(VirtualMachineCaptureResult, Symbol("parameters"), parameters)
        setfield!(o, Symbol("parameters"), parameters)
        validate_property(VirtualMachineCaptureResult, Symbol("resources"), resources)
        setfield!(o, Symbol("resources"), resources)
        o
    end
end # type VirtualMachineCaptureResult

const _property_map_VirtualMachineCaptureResult = Dict{Symbol,Symbol}(Symbol("id")=>Symbol("id"), Symbol("\$schema")=>Symbol("schema"), Symbol("contentVersion")=>Symbol("contentVersion"), Symbol("parameters")=>Symbol("parameters"), Symbol("resources")=>Symbol("resources"))
const _property_types_VirtualMachineCaptureResult = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("\$schema")=>"String", Symbol("contentVersion")=>"String", Symbol("parameters")=>"Any", Symbol("resources")=>"Vector{Any}")
Base.propertynames(::Type{ VirtualMachineCaptureResult }) = collect(keys(_property_map_VirtualMachineCaptureResult))
Swagger.property_type(::Type{ VirtualMachineCaptureResult }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_VirtualMachineCaptureResult[name]))}
Swagger.field_name(::Type{ VirtualMachineCaptureResult }, property_name::Symbol) =  _property_map_VirtualMachineCaptureResult[property_name]

function check_required(o::VirtualMachineCaptureResult)
    true
end

function validate_property(::Type{ VirtualMachineCaptureResult }, name::Symbol, val)
end
