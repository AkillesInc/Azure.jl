# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct ComputeOperationValue <: SwaggerModel
    origin::Any # spec type: Union{ Nothing, String } # spec name: origin
    name::Any # spec type: Union{ Nothing, String } # spec name: name
    display::Any # spec type: Union{ Nothing, ComputeOperationValueDisplay } # spec name: display

    function ComputeOperationValue(;origin=nothing, name=nothing, display=nothing)
        o = new()
        validate_property(ComputeOperationValue, Symbol("origin"), origin)
        setfield!(o, Symbol("origin"), origin)
        validate_property(ComputeOperationValue, Symbol("name"), name)
        setfield!(o, Symbol("name"), name)
        validate_property(ComputeOperationValue, Symbol("display"), display)
        setfield!(o, Symbol("display"), display)
        o
    end
end # type ComputeOperationValue

const _property_map_ComputeOperationValue = Dict{Symbol,Symbol}(Symbol("origin")=>Symbol("origin"), Symbol("name")=>Symbol("name"), Symbol("display")=>Symbol("display"))
const _property_types_ComputeOperationValue = Dict{Symbol,String}(Symbol("origin")=>"String", Symbol("name")=>"String", Symbol("display")=>"ComputeOperationValueDisplay")
Base.propertynames(::Type{ ComputeOperationValue }) = collect(keys(_property_map_ComputeOperationValue))
Swagger.property_type(::Type{ ComputeOperationValue }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ComputeOperationValue[name]))}
Swagger.field_name(::Type{ ComputeOperationValue }, property_name::Symbol) =  _property_map_ComputeOperationValue[property_name]

function check_required(o::ComputeOperationValue)
    true
end

function validate_property(::Type{ ComputeOperationValue }, name::Symbol, val)
end
