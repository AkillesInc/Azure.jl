# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.

mutable struct DiskEncryptionSettings <: SwaggerModel
    diskEncryptionKey::Union{ Nothing, KeyVaultSecretReference } # diskEncryptionKey
    keyEncryptionKey::Union{ Nothing, KeyVaultKeyReference } # keyEncryptionKey
    enabled::Union{ Nothing, Bool } # enabled

    function DiskEncryptionSettings(;diskEncryptionKey=nothing, keyEncryptionKey=nothing, enabled=nothing)
        o = new()
        set_field!(o, :diskEncryptionKey, diskEncryptionKey)
        set_field!(o, :keyEncryptionKey, keyEncryptionKey)
        set_field!(o, :enabled, enabled)
        o
    end
end # type DiskEncryptionSettings

const _name_map_DiskEncryptionSettings = Dict{String,Symbol}(["diskEncryptionKey"=>:diskEncryptionKey, "keyEncryptionKey"=>:keyEncryptionKey, "enabled"=>:enabled])
const _field_map_DiskEncryptionSettings = Dict{Symbol,String}([:diskEncryptionKey=>"diskEncryptionKey", :keyEncryptionKey=>"keyEncryptionKey", :enabled=>"enabled"])
Swagger.name_map(::Type{ DiskEncryptionSettings }) = _name_map_DiskEncryptionSettings
Swagger.field_map(::Type{ DiskEncryptionSettings }) = _field_map_DiskEncryptionSettings

function check_required(o::DiskEncryptionSettings)
    true
end

function validate_field(o::DiskEncryptionSettings, name::Symbol, val)
end
