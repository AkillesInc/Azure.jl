# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct DedicatedHostAvailableCapacity <: SwaggerModel
    allocatableVMs::Any # spec type: Union{ Nothing, Vector{DedicatedHostAllocatableVM} } # spec name: allocatableVMs

    function DedicatedHostAvailableCapacity(;allocatableVMs=nothing)
        o = new()
        validate_property(DedicatedHostAvailableCapacity, Symbol("allocatableVMs"), allocatableVMs)
        setfield!(o, Symbol("allocatableVMs"), allocatableVMs)
        o
    end
end # type DedicatedHostAvailableCapacity

const _property_map_DedicatedHostAvailableCapacity = Dict{Symbol,Symbol}(Symbol("allocatableVMs")=>Symbol("allocatableVMs"))
const _property_types_DedicatedHostAvailableCapacity = Dict{Symbol,String}(Symbol("allocatableVMs")=>"Vector{DedicatedHostAllocatableVM}")
Base.propertynames(::Type{ DedicatedHostAvailableCapacity }) = collect(keys(_property_map_DedicatedHostAvailableCapacity))
Swagger.property_type(::Type{ DedicatedHostAvailableCapacity }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_DedicatedHostAvailableCapacity[name]))}
Swagger.field_name(::Type{ DedicatedHostAvailableCapacity }, property_name::Symbol) =  _property_map_DedicatedHostAvailableCapacity[property_name]

function check_required(o::DedicatedHostAvailableCapacity)
    true
end

function validate_property(::Type{ DedicatedHostAvailableCapacity }, name::Symbol, val)
end
