# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.

type ImageDataDisk <: SwaggerModel
    lun::Nullable{ Int32 } # lun
    snapshot::Nullable{ SubResource } # snapshot
    managedDisk::Nullable{ SubResource } # managedDisk
    blobUri::Nullable{ String } # blobUri
    caching::Nullable{ String } # caching
    diskSizeGB::Nullable{ Int32 } # diskSizeGB
    storageAccountType::Nullable{ StorageAccountType } # storageAccountType

    function ImageDataDisk(;lun=nothing, snapshot=nothing, managedDisk=nothing, blobUri=nothing, caching=nothing, diskSizeGB=nothing, storageAccountType=nothing)
        o = new()
        set_field!(o, :lun, lun)
        set_field!(o, :snapshot, snapshot)
        set_field!(o, :managedDisk, managedDisk)
        set_field!(o, :blobUri, blobUri)
        set_field!(o, :caching, caching)
        set_field!(o, :diskSizeGB, diskSizeGB)
        set_field!(o, :storageAccountType, storageAccountType)
        o
    end
end # type ImageDataDisk

const _name_map_ImageDataDisk = Dict{String,Symbol}(["lun"=>:lun, "snapshot"=>:snapshot, "managedDisk"=>:managedDisk, "blobUri"=>:blobUri, "caching"=>:caching, "diskSizeGB"=>:diskSizeGB, "storageAccountType"=>:storageAccountType])
const _field_map_ImageDataDisk = Dict{Symbol,String}([:lun=>"lun", :snapshot=>"snapshot", :managedDisk=>"managedDisk", :blobUri=>"blobUri", :caching=>"caching", :diskSizeGB=>"diskSizeGB", :storageAccountType=>"storageAccountType"])
Swagger.name_map(::Type{ ImageDataDisk }) = _name_map_ImageDataDisk
Swagger.field_map(::Type{ ImageDataDisk }) = _field_map_ImageDataDisk

const _allowed_ImageDataDisk_caching = ["None", "ReadOnly", "ReadWrite"]

function check_required(o::ImageDataDisk)
    isnull(o.lun) && (return false)
    true
end

function validate_field(o::ImageDataDisk, name::Symbol, val)
    if name === :caching
        Swagger.validate_param(name, "ImageDataDisk", :enum, val, _allowed_ImageDataDisk_caching)
    end
end
