# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct BootDiagnosticsInstanceView <: SwaggerModel
    consoleScreenshotBlobUri::Any # spec type: Union{ Nothing, String } # spec name: consoleScreenshotBlobUri
    serialConsoleLogBlobUri::Any # spec type: Union{ Nothing, String } # spec name: serialConsoleLogBlobUri
    status::Any # spec type: Union{ Nothing, InstanceViewStatus } # spec name: status

    function BootDiagnosticsInstanceView(;consoleScreenshotBlobUri=nothing, serialConsoleLogBlobUri=nothing, status=nothing)
        o = new()
        validate_property(BootDiagnosticsInstanceView, Symbol("consoleScreenshotBlobUri"), consoleScreenshotBlobUri)
        setfield!(o, Symbol("consoleScreenshotBlobUri"), consoleScreenshotBlobUri)
        validate_property(BootDiagnosticsInstanceView, Symbol("serialConsoleLogBlobUri"), serialConsoleLogBlobUri)
        setfield!(o, Symbol("serialConsoleLogBlobUri"), serialConsoleLogBlobUri)
        validate_property(BootDiagnosticsInstanceView, Symbol("status"), status)
        setfield!(o, Symbol("status"), status)
        o
    end
end # type BootDiagnosticsInstanceView

const _property_map_BootDiagnosticsInstanceView = Dict{Symbol,Symbol}(Symbol("consoleScreenshotBlobUri")=>Symbol("consoleScreenshotBlobUri"), Symbol("serialConsoleLogBlobUri")=>Symbol("serialConsoleLogBlobUri"), Symbol("status")=>Symbol("status"))
const _property_types_BootDiagnosticsInstanceView = Dict{Symbol,String}(Symbol("consoleScreenshotBlobUri")=>"String", Symbol("serialConsoleLogBlobUri")=>"String", Symbol("status")=>"InstanceViewStatus")
Base.propertynames(::Type{ BootDiagnosticsInstanceView }) = collect(keys(_property_map_BootDiagnosticsInstanceView))
Swagger.property_type(::Type{ BootDiagnosticsInstanceView }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_BootDiagnosticsInstanceView[name]))}
Swagger.field_name(::Type{ BootDiagnosticsInstanceView }, property_name::Symbol) =  _property_map_BootDiagnosticsInstanceView[property_name]

function check_required(o::BootDiagnosticsInstanceView)
    true
end

function validate_property(::Type{ BootDiagnosticsInstanceView }, name::Symbol, val)
end
