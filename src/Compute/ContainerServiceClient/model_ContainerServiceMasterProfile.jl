# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.

mutable struct ContainerServiceMasterProfile <: SwaggerModel
    count::Union{ Nothing, Int32 } # count
    dnsPrefix::Union{ Nothing, String } # dnsPrefix
    fqdn::Union{ Nothing, String } # fqdn

    function ContainerServiceMasterProfile(;count=1, dnsPrefix=nothing, fqdn=nothing)
        o = new()
        set_field!(o, :count, count)
        set_field!(o, :dnsPrefix, dnsPrefix)
        set_field!(o, :fqdn, fqdn)
        o
    end
end # type ContainerServiceMasterProfile

const _name_map_ContainerServiceMasterProfile = Dict{String,Symbol}(["count"=>:count, "dnsPrefix"=>:dnsPrefix, "fqdn"=>:fqdn])
const _field_map_ContainerServiceMasterProfile = Dict{Symbol,String}([:count=>"count", :dnsPrefix=>"dnsPrefix", :fqdn=>"fqdn"])
Swagger.name_map(::Type{ ContainerServiceMasterProfile }) = _name_map_ContainerServiceMasterProfile
Swagger.field_map(::Type{ ContainerServiceMasterProfile }) = _field_map_ContainerServiceMasterProfile

const _allowed_ContainerServiceMasterProfile_count = ["1", "3", "5"]

function check_required(o::ContainerServiceMasterProfile)
    (o.dnsPrefix === nothing) && (return false)
    true
end

function validate_field(o::ContainerServiceMasterProfile, name::Symbol, val)
    if name === :count
        Swagger.validate_param(name, "ContainerServiceMasterProfile", :enum, val, _allowed_ContainerServiceMasterProfile_count)
    end
end
