# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct DiskAccessProperties <: SwaggerModel
    privateEndpointConnections::Any # spec type: Union{ Nothing, Vector{PrivateEndpointConnection} } # spec name: privateEndpointConnections
    provisioningState::Any # spec type: Union{ Nothing, String } # spec name: provisioningState
    timeCreated::Any # spec type: Union{ Nothing, DateTime } # spec name: timeCreated

    function DiskAccessProperties(;privateEndpointConnections=nothing, provisioningState=nothing, timeCreated=nothing)
        o = new()
        validate_property(DiskAccessProperties, Symbol("privateEndpointConnections"), privateEndpointConnections)
        setfield!(o, Symbol("privateEndpointConnections"), privateEndpointConnections)
        validate_property(DiskAccessProperties, Symbol("provisioningState"), provisioningState)
        setfield!(o, Symbol("provisioningState"), provisioningState)
        validate_property(DiskAccessProperties, Symbol("timeCreated"), timeCreated)
        setfield!(o, Symbol("timeCreated"), timeCreated)
        o
    end
end # type DiskAccessProperties

const _property_map_DiskAccessProperties = Dict{Symbol,Symbol}(Symbol("privateEndpointConnections")=>Symbol("privateEndpointConnections"), Symbol("provisioningState")=>Symbol("provisioningState"), Symbol("timeCreated")=>Symbol("timeCreated"))
const _property_types_DiskAccessProperties = Dict{Symbol,String}(Symbol("privateEndpointConnections")=>"Vector{PrivateEndpointConnection}", Symbol("provisioningState")=>"String", Symbol("timeCreated")=>"DateTime")
Base.propertynames(::Type{ DiskAccessProperties }) = collect(keys(_property_map_DiskAccessProperties))
Swagger.property_type(::Type{ DiskAccessProperties }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_DiskAccessProperties[name]))}
Swagger.field_name(::Type{ DiskAccessProperties }, property_name::Symbol) =  _property_map_DiskAccessProperties[property_name]

function check_required(o::DiskAccessProperties)
    true
end

function validate_property(::Type{ DiskAccessProperties }, name::Symbol, val)
end
