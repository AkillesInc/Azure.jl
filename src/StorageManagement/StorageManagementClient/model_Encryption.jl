# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.

type Encryption <: SwaggerModel
    services::Nullable{ EncryptionServices } # services
    keySource::Nullable{ String } # keySource
    keyvaultproperties::Nullable{ KeyVaultProperties } # keyvaultproperties

    function Encryption(;services=nothing, keySource="Microsoft.Storage", keyvaultproperties=nothing)
        o = new()
        set_field!(o, :services, services)
        set_field!(o, :keySource, keySource)
        set_field!(o, :keyvaultproperties, keyvaultproperties)
        o
    end
end # type Encryption

const _name_map_Encryption = Dict{String,Symbol}(["services"=>:services, "keySource"=>:keySource, "keyvaultproperties"=>:keyvaultproperties])
const _field_map_Encryption = Dict{Symbol,String}([:services=>"services", :keySource=>"keySource", :keyvaultproperties=>"keyvaultproperties"])
Swagger.name_map(::Type{ Encryption }) = _name_map_Encryption
Swagger.field_map(::Type{ Encryption }) = _field_map_Encryption

const _allowed_Encryption_keySource = ["Microsoft.Storage", "Microsoft.Keyvault"]

function check_required(o::Encryption)
    true
end

function validate_field(o::Encryption, name::Symbol, val)
    if name === :keySource
        Swagger.validate_param(name, "Encryption", :enum, val, _allowed_Encryption_keySource)
    end
end
